<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>小六壬实时占卜</title>
<style>
        body { 
            font-family: 'Microsoft YaHei', Arial, sans-serif; 
            margin: 0; 
            padding: 0; 
            background: linear-gradient(135deg, #2c2c2c 0%, #1a1a1a 100%);
            min-height: 100vh;
            color: #e0e0e0;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .card { 
            width: 90%;
            max-width: 600px;
            background: #f5f5f5; 
            border: none; 
            border-radius: 20px; 
            padding: 0; 
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
            overflow: hidden;
            display: flex;
            flex-direction: column;
        }
        
        .header {
            background: linear-gradient(135deg, #2c2c2c 0%, #1a1a1a 100%);
            color: #ffffff;
            padding: 40px 30px;
            text-align: center;
            position: relative;
        }

        .header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="white" opacity="0.1"/><circle cx="10" cy="60" r="0.5" fill="white" opacity="0.1"/><circle cx="90" cy="40" r="0.5" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
            opacity: 0.3;
        }

        .header h1 {
            margin: 0;
            font-size: 2.5em;
            font-weight: 300;
            position: relative;
            z-index: 1;
            text-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .header p {
            margin: 10px 0 0 0;
            font-size: 0.55em;
            opacity: 0.9;
            position: relative;
            z-index: 1;
        }
        
        .content {
            padding: 40px 30px;
        }
        
        .main-result {
            text-align: center;
            margin-bottom: 40px;
        }
        
        .result-number {
            font-size: 2em;
            font-weight: 600;
            color: #333;
            margin: 10px 0;
            text-shadow: 0 2px 4px rgba(102, 126, 234, 0.2);
            transform: translateY(-20px);
        }
        
        .result-outcome {
            font-size: 8.75em;
            font-weight: 700;
            background: linear-gradient(135deg, #333, #1a1a1a);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin: 20px 0;
            transform: translateY(-20px);
        }
        
        .info-container {
            margin-top: 30px; 
            padding: 25px;
            background: linear-gradient(135deg, #f0f0f0 0%, #e0e0e0 100%);
            border-radius: 15px;
            border-left: 4px solid #333;
            font-weight: 500;
            line-height: 1.6;
            box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        }
        
        .info-title {
            color: #333;
            font-size: 1.2em;
            font-weight: 600;
            margin-bottom: 15px;
            text-align: center;
        }
        
        .info-item {
            margin: 8px 0;
            padding: 8px 0;
            border-bottom: 1px solid #666;
        }
        
        .info-item:last-child {
            border-bottom: none;
        }
        
        .info-label {
            color: #555;
            font-weight: 500;
            font-size: 0.8em;
        }
        
        .info-value {
            color: #333;
            font-weight: 600;
            font-size: 0.8em;
            font-family: 'Courier New', monospace;
        }
        
        
        .highlight-value {
            background: linear-gradient(135deg, #333, #1a1a1a);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: 700;
        }
        
        
        .footer {
            text-align: center;
            padding: 20px 30px;
            color: #555;
            font-size: 0.7em;
            line-height: 1.5;
        }
        
        .logic-container {
            text-align: center;
            margin-top: 15px;
        }
        
        .logic-link {
            color: #333;
            text-decoration: none;
            font-size: 0.9em;
            cursor: pointer;
            transition: color 0.3s ease;
        }
        
        .logic-link:hover {
            color: #1a1a1a;
            text-decoration: underline;
        }
        
        .tooltip {
            position: relative;
            display: inline-block;
        }
        
        .tooltip .tooltiptext {
            visibility: hidden;
            width: 75vw;
            max-width: 600px;
            background-color: #1a1a1a;
            color: #fff;
            text-align: left;
            border-radius: 8px;
            padding: 20px;
            position: fixed;
            z-index: 1000;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            opacity: 0;
            transition: opacity 0.3s;
            font-size: 0.85em;
            line-height: 1.4;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }
        
        .tooltip:hover .tooltiptext {
            visibility: visible;
            opacity: 1;
        }
        
        .tooltip-step {
            margin: 8px 0;
            font-weight: 500;
        }
        
        .tooltip-rule {
            margin: 4px 0 4px 15px;
            font-size: 0.9em;
        }
        
        .tooltip-element {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 5px;
            margin-top: 8px;
        }
        
        .tooltip-element-item {
            background: rgba(255,255,255,0.1);
            padding: 3px 6px;
            border-radius: 4px;
            text-align: left;
            font-size: 0.8em;
        }
        
        
        @media (max-width: 600px) {
            .card {
                width: 95%;
                margin: 20px;
            }
            
            .header {
                padding: 30px 20px;
            }
            
            .header h1 {
                font-size: 2em;
            }
            
            .content {
                padding: 30px 20px;
            }
            
            .result-number {
                font-size: 1.5em;
            }
            
            .result-outcome {
                font-size: 6.25em;
            }
  }
</style>
</head>
<body>
    <div class="card">
        <div class="header">
            <h1>小六壬</h1>
            <p>以北京时间（UTC+8）计算 · 自动每分钟刷新</p>
        </div>
        
        <div class="content">
            <div class="main-result">
                <div id="outcome" class="result-outcome">--</div>
                <div id="headline" class="result-number">--</div>
            </div>

            <div class="info-container">
                <div class="info-item">
                    <span class="info-label">北京时间：</span>
                    <span id="cnTime" class="info-value">--</span>
                </div>
                <div class="info-item">
                    <span class="info-label">农历时间：</span>
                    <span id="lunar" class="info-value">--</span>
                </div>
                <div class="info-item">
                    <span class="info-label">当前时辰：</span>
                    <span id="shichen" class="info-value">--</span>
                </div>
    </div>

  </div>

        <div class="footer">
            <div class="logic-container">
                <div class="tooltip">
                    <span class="logic-link">计算逻辑</span>
                    <div class="tooltiptext">
                    <div class="tooltip-step">计算公式：(农历月+农历日+时辰对应数字) mod 6</div>
                    <div class="tooltip-step">时辰对应数字：</div>
                    <div class="tooltip-element">
                        <div class="tooltip-element-item">子时：23-1点（1）</div>
                        <div class="tooltip-element-item">丑时：1-3点（2）</div>
                        <div class="tooltip-element-item">寅时：3-5点（3）</div>
                        <div class="tooltip-element-item">卯时：5-7点（4）</div>
                        <div class="tooltip-element-item">辰时：7-9点（5）</div>
                        <div class="tooltip-element-item">巳时：9-11点（6）</div>
                        <div class="tooltip-element-item">午时：11-13点（7）</div>
                        <div class="tooltip-element-item">未时：13-15点（8）</div>
                        <div class="tooltip-element-item">申时：15-17点（9）</div>
                        <div class="tooltip-element-item">酉时：17-19点（10）</div>
                        <div class="tooltip-element-item">戌时：19-21点（11）</div>
                        <div class="tooltip-element-item">亥时：21-23点（12）</div>
                    </div>
                    <div class="tooltip-step">结果映射：</div>
                    <div class="tooltip-element">
                        <div class="tooltip-element-item">0 = 空亡</div>
                        <div class="tooltip-element-item">1 = 大安</div>
                        <div class="tooltip-element-item">2 = 留连</div>
                        <div class="tooltip-element-item">3 = 速喜</div>
                        <div class="tooltip-element-item">4 = 赤口</div>
                        <div class="tooltip-element-item">5 = 小吉</div>
                    </div>
                    </div>
                </div>
            </div>
            <div style="margin-top: 15px;">
                说明：农历换算支持 1900–2100 年
            </div>
        </div>
</div>

<script>
// ---- 计算北京时间（不依赖本机时区） ----
function getBeijingParts(date = new Date()){
  const opt = { timeZone: 'Asia/Shanghai', hour12: false,
    year: 'numeric', month: '2-digit', day: '2-digit',
    hour: '2-digit', minute: '2-digit', second: '2-digit' };
  const fmt = new Intl.DateTimeFormat('zh-CN', opt);
  const parts = fmt.formatToParts(date).reduce((acc,p)=>{acc[p.type]=p.value; return acc;},{});
  return {
    y: Number(parts.year), m: Number(parts.month), d: Number(parts.day),
    h: Number(parts.hour), i: Number(parts.minute), s: Number(parts.second)
  };
}

// ---- 农历换算（1900–2100） ----
// 数据与算法思路参考常见公开实现，位级表示闰月与月大小。
const lunarInfo = [
  0x04bd8,0x04ae0,0x0a570,0x054d5,0x0d260,0x0d950,0x16554,0x056a0,0x09ad0,0x055d2,
  0x04ae0,0x0a5b6,0x0a4d0,0x0d250,0x1d255,0x0b540,0x0d6a0,0x0ada2,0x095b0,0x14977,
  0x04970,0x0a4b0,0x0b4b5,0x06a50,0x06d40,0x1ab54,0x02b60,0x09570,0x052f2,0x04970,
  0x06566,0x0d4a0,0x0ea50,0x06e95,0x05ad0,0x02b60,0x186e3,0x092e0,0x1c8d7,0x0c950,
  0x0d4a0,0x1d8a6,0x0b550,0x056a0,0x1a5b4,0x025d0,0x092d0,0x0d2b2,0x0a950,0x0b557,
  0x06ca0,0x0b550,0x15355,0x04da0,0x0a5d0,0x14573,0x052d0,0x0a9a8,0x0e950,0x06aa0,
  0x0aea6,0x0ab50,0x04b60,0x0aae4,0x0a570,0x05260,0x0f263,0x0d950,0x05b57,0x056a0,
  0x096d0,0x04dd5,0x04ad0,0x0a4d0,0x0d4d4,0x0d250,0x0d558,0x0b540,0x0b6a0,0x195a6,
  0x095b0,0x049b0,0x0a974,0x0a4b0,0x0b27a,0x06a50,0x06d40,0x0af46,0x0ab60,0x09570,
  0x04af5,0x04970,0x064b0,0x074a3,0x0ea50,0x06b58,0x05ac0,0x0ab60,0x096d5,0x092e0,
  0x0c960,0x0d954,0x0d4a0,0x0da50,0x07552,0x056a0,0x0abb7,0x025d0,0x092d0,0x0cab5,
  0x0a950,0x0b4a0,0x0baa4,0x0ad50,0x055d9,0x04ba0,0x0a5b0,0x15176,0x052b0,0x0a930,
  0x07954,0x06aa0,0x0ad50,0x05b52,0x04b60,0x0a6e6,0x0a4e0,0x0d260,0x0ea65,0x0d530,
  0x05aa0,0x076a3,0x096d0,0x04afb,0x04ad0,0x0a4d0,0x1d0b6,0x0d250,0x0d520,0x0dd45,
  0x0b5a0,0x056d0,0x055b2,0x049b0,0x0a577,0x0a4b0,0x0aa50,0x1b255,0x06d20,0x0ada0,
  0x14b63,0x09370,0x049f8,0x04970,0x064b0,0x168a6,0x0ea50,0x06b20,0x1a6c4,0x0aae0,
  0x0a2e0,0x0d2e3,0x0c960,0x0d557,0x0d4a0,0x0da50,0x05d55,0x056a0,0x0a6d0,0x055d4,
  0x052d0,0x0a9b8,0x0a950,0x0b4a0,0x0b6a6,0x0ad50,0x055a0,0x0aba4,0x0a5b0,0x052b0,
  0x0b273,0x06930,0x07337,0x06aa0,0x0ad50,0x14b55,0x04b60,0x0a570,0x054e4,0x0d160,
  0x0e968,0x0d520,0x0daa0,0x16aa6,0x056d0,0x04ae0,0x0a9d4,0x0a2d0,0x0d150,0x0f252,
  0x0d520,0x0dd45,0x0b5a0,0x056d0,0x0a5b6,0x049b0,0x0a4b0,0x0b4b5,0x06a50,0x06d40,
  0x1ab54,0x02b60,0x09570,0x052f2,0x04970,0x06566,0x0d4a0,0x0ea50,0x06e95,0x05ad0,
  0x02b60,0x186e3,0x092e0,0x1c8d7,0x0c950,0x0d4a0,0x1d8a6,0x0b550,0x056a0,0x1a5b4,
  0x025d0,0x092d0,0x0d2b2,0x0a950,0x0b557,0x06ca0,0x0b550,0x15355,0x04da0,0x0a5d0,
  0x14573,0x052d0,0x0a9a8,0x0e950,0x06aa0,0x0aea6,0x0ab50,0x04b60,0x0aae4,0x0a570,
  0x05260,0x0f263,0x0d950,0x05b57,0x056a0,0x096d0,0x04dd5,0x04ad0,0x0a4d0,0x0d4d4,
  0x0d250,0x0d558,0x0b540,0x0b6a0,0x195a6,0x095b0,0x049b0,0x0a974,0x0a4b0,0x0b27a,
  0x06a50,0x06d40,0x0af46,0x0ab60,0x09570,0x04af5,0x04970,0x064b0,0x074a3,0x0ea50,
  0x06b58,0x05ac0,0x0ab60,0x096d5,0x092e0,0x0c960,0x0d954,0x0d4a0,0x0da50,0x07552,
  0x056a0,0x0abb7,0x025d0,0x092d0,0x0cab5,0x0a950,0x0b4a0,0x0baa4,0x0ad50,0x055d9,
  0x04ba0,0x0a5b0,0x15176,0x052b0,0x0a930,0x07954,0x06aa0,0x0ad50,0x05b52,0x04b60,
  0x0a6e6,0x0a4e0,0x0d260,0x0ea65,0x0d530,0x05aa0,0x076a3,0x096d0,0x04afb,0x04ad0,
  0x0a4d0,0x1d0b6,0x0d250,0x0d520,0x0dd45,0x0b5a0,0x056d0,0x055b2,0x049b0,0x0a577,
  0x0a4b0,0x0aa50,0x1b255,0x06d20,0x0ada0,0x14b63,0x09370,0x049f8,0x04970,0x064b0,
  0x168a6,0x0ea50,0x06b20,0x1a6c4,0x0aae0,0x0a2e0,0x0d2e3,0x0c960,0x0d557,0x0d4a0,
  0x0da50,0x05d55,0x056a0,0x0a6d0,0x055d4,0x052d0,0x0a9b8,0x0a950,0x0b4a0,0x0b6a6,
  0x0ad50,0x055a0,0x0aba4,0x0a5b0,0x052b0,0x0b273,0x06930,0x07337,0x06aa0,0x0ad50,
  0x14b55,0x04b60,0x0a570,0x054e4,0x0d160,0x0e968,0x0d520,0x0daa0,0x16aa6,0x056d0,
  0x04ae0,0x0a9d4,0x0a2d0,0x0d150,0x0f252,0x0d520
]; // 注意：重复一轮以涵盖 1900-2100

function lYearDays(y) {
  let sum = 348;
  const info = lunarInfo[y-1900];
  for (let i=0x8000; i>0x8; i >>= 1) sum += (info & i) ? 1 : 0;
  return sum + leapDays(y);
}
function leapMonth(y){ return lunarInfo[y-1900] & 0xf; }
function leapDays(y){ return leapMonth(y) ? ((lunarInfo[y-1900] & 0x10000) ? 30 : 29) : 0; }
function monthDays(y,m){ return (lunarInfo[y-1900] & (0x10000 >> m)) ? 30 : 29; }

// 公历转农历
function solarToLunar(y,m,d){
  // 基准：1900-01-31 为农历 1900-正月-初一
  const baseDate = new Date(1900,0,31);
  const objDate = new Date(y, m-1, d);
  let offset = Math.floor((objDate - baseDate)/86400000);
  let i=1900, temp=0;
  for(; i<2101 && offset>0; i++){
    temp = lYearDays(i);
    offset -= temp;
  }
  if (offset < 0){ offset += temp; i--; }
  const lunarYear = i;
  let leap = leapMonth(lunarYear);
  let isLeap = false;
  let lunarMonth, lunarDay;

  for (i=1; i<13 && offset>0; i++){
    if (leap>0 && i==(leap+1) && !isLeap){ --i; isLeap = true; temp = leapDays(lunarYear); }
    else { temp = monthDays(lunarYear, i); }
    if (isLeap && i==(leap+1)) isLeap = false;
    offset -= temp;
  }
  if (offset === 0 && leap>0 && i==leap+1){
    if (isLeap){ isLeap = false; }
    else { isLeap = true; --i; }
  }
  if (offset < 0){ offset += temp; --i; }

  lunarMonth = i;
  lunarDay = offset + 1;

  return { year:lunarYear, month:lunarMonth, day:lunarDay, isLeap:isLeap };
}

// 时辰（北京时间）
const SHICHEN = [
  {name:'子', num:1, ranges:[ [23,24], [0,1] ]},
  {name:'丑', num:2, ranges:[ [1,3] ]},
  {name:'寅', num:3, ranges:[ [3,5] ]},
  {name:'卯', num:4, ranges:[ [5,7] ]},
  {name:'辰', num:5, ranges:[ [7,9] ]},
  {name:'巳', num:6, ranges:[ [9,11] ]},
  {name:'午', num:7, ranges:[ [11,13] ]},
  {name:'未', num:8, ranges:[ [13,15] ]},
  {name:'申', num:9, ranges:[ [15,17] ]},
  {name:'酉', num:10, ranges:[ [17,19] ]},
  {name:'戌', num:11, ranges:[ [19,21] ]},
  {name:'亥', num:12, ranges:[ [21,23] ]},
];

function hourToShichenCN(hour){
  if (hour === 23 || hour === 0) return SHICHEN[0];
  // 1..22
  const idx = Math.max(1, Math.min(11, Math.floor((hour - 1)/2) + 1));
  return SHICHEN[idx];
}

const OUTCOME = ['空亡','大安','留连','速喜','赤口','小吉'];

function fmt2(n){ return (n<10?'0':'') + n; }

function update(){
  const p = getBeijingParts();
  const cnTimeStr = `${p.y}${fmt2(p.m)}${fmt2(p.d)} ${fmt2(p.h)}:${fmt2(p.i)}:${fmt2(p.s)} (UTC+8)`;

  const lunar = solarToLunar(p.y, p.m, p.d);
  const A = lunar.month;
  const B = lunar.day;
  const sh = hourToShichenCN(p.h);
  const C = sh.num;
  const D = A + B + C;
  const outcome = OUTCOME[D % 6];

  document.getElementById('headline').textContent = `${D}`;
  document.getElementById('outcome').textContent = outcome;

  document.getElementById('cnTime').textContent = cnTimeStr;
  // 中文数字转换
  function toChineseNumber(num) {
    const chineseNumbers = ['', '一', '二', '三', '四', '五', '六', '七', '八', '九', '十'];
    const chineseTens = ['', '十', '廿', '卅'];
    
    if (num <= 10) {
      return chineseNumbers[num];
    } else if (num < 20) {
      return '十' + (num % 10 === 0 ? '' : chineseNumbers[num % 10]);
    } else if (num < 30) {
      return '廿' + (num % 10 === 0 ? '' : chineseNumbers[num % 10]);
    } else if (num < 40) {
      return '卅' + (num % 10 === 0 ? '' : chineseNumbers[num % 10]);
    }
    return num.toString();
  }
  
  function toChineseMonth(month) {
    const monthNames = ['', '正', '二', '三', '四', '五', '六', '七', '八', '九', '十', '冬', '腊'];
    return monthNames[month] || month.toString();
  }
  
  const chineseMonth = toChineseMonth(A);
  const chineseDay = toChineseNumber(B);
  const dayPrefix = B <= 10 ? '初' : '';
  
  document.getElementById('lunar').textContent = `${lunar.year}年${lunar.isLeap?'闰':''}${chineseMonth}月${dayPrefix}${chineseDay}`;
  // 时辰时间范围
  function getShichenTimeRange(shichenName) {
    const timeRanges = {
      '子': '23:00-01:00',
      '丑': '01:00-03:00', 
      '寅': '03:00-05:00',
      '卯': '05:00-07:00',
      '辰': '07:00-09:00',
      '巳': '09:00-11:00',
      '午': '11:00-13:00',
      '未': '13:00-15:00',
      '申': '15:00-17:00',
      '酉': '17:00-19:00',
      '戌': '19:00-21:00',
      '亥': '21:00-23:00'
    };
    return timeRanges[shichenName] || '';
  }
  
  const timeRange = getShichenTimeRange(sh.name);
  document.getElementById('shichen').textContent = `${sh.name}时（${timeRange}）`;
}

update();
setInterval(update, 60000);
</script>
</body>
</html>
