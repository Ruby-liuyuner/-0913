<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>64卦查询工具</title>
    <style>
        body { 
            font-family: 'Microsoft YaHei', Arial, sans-serif; 
            margin: 0; 
            padding: 0; 
            background: linear-gradient(135deg, #2c2c2c 0%, #1a1a1a 100%);
            min-height: 100vh;
            color: #e0e0e0;
        }
        .card { 
            width: 90%;
            height: 90vh;
            margin: 5vh auto;
            background: #f5f5f5; 
            border: none; 
            border-radius: 20px; 
            padding: 0; 
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
            overflow: hidden;
            display: flex;
            flex-direction: column;
        }
        .header {
            background: linear-gradient(135deg, #2c2c2c 0%, #1a1a1a 100%);
            color: #ffffff;
            padding: 37px 40px;
            text-align: center;
            position: relative;
            width: 150%;
            left: 50%;
            transform: translateX(-50%);
        }

        .header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="white" opacity="0.1"/><circle cx="10" cy="60" r="0.5" fill="white" opacity="0.1"/><circle cx="90" cy="40" r="0.5" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
            opacity: 0.3;
        }

        .header h1 {
            margin: 0;
            font-size: 1.75em;
            font-weight: 300;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            position: relative;
            z-index: 1;
            text-align: center;
            width: 100%;
        }

        .query-section { 
            padding: 50px 60px; 
            margin-bottom: 0; 
            transform: translateY(-15px);
            background: #f5f5f5;
        }
        .query-title { font-size: 24px; font-weight: bold; margin-bottom: 15px; }
        .query-method-container { text-align: center; margin-bottom: 30px; margin-top: -60px; }

        .query-row {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 30px;
            margin-bottom: 10px;
            margin-top: -30px;
        }

        .query-buttons {
            display: flex;
            justify-content: center;
            gap: 4px;
            margin-bottom: 30px;
            margin-top: -20px;
        }

        .query-btn {
            padding: 3px 13px;
            font-size: 11px;
            font-weight: 600;
            border: 2px solid #666;
            border-radius: 50px;
            background-color: #f0f0f0;
            color: #333;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            min-width: 91px;
            position: relative;
            overflow: hidden;
            white-space: nowrap;
            text-align: center;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .query-btn:hover {
            background-color: #e0e0e0;
            border-color: #888;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

        .query-btn.active {
            background-color: #333;
            color: white;
            border-color: #333;
        }

        .query-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s;
        }

        .query-btn:hover::before {
            left: 100%;
        }


        .query-input {
            display: flex;
            align-items: center;
        }

        #result {
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
            border-radius: 15px;
            padding: 15px 15px 25px 15px;
            margin: -73px auto 0 auto;
            border: 1px solid #e9ecef;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            width: 140%;
            transform: scale(0.85);
            transform-origin: center center;
            display: none;
            flex-direction: column;
            align-items: center;
            position: relative;
            left: 50%;
            transform: translateX(-50%) scale(0.85);
        }
        
        #result > * {
            transform: translateX(30px);
        }


        .search-container input:focus {
            border-color: #333;
            background: #f5f5f5;
        }

        .search-icon {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%) scale(2);
            cursor: pointer;
            color: #666;
            transition: color 0.2s;
        }

        .search-icon:hover {
            color: #333;
        }
        select, input, button { padding: 8px; margin: 5px; }
        .yao-row { margin: 5px 0; }
        .gua-table { width: 100%; border-collapse: collapse; }
        .gua-table th, .gua-table td { border: 1px solid #ddd; padding: 8px; text-align: center; }
        .gua-table th { background-color: #f5f5f5; }

        .gua-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
            padding: 20px;
        }

        .gua-grid-item {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            text-align: center;
            height: fit-content;
            font-size: 0.8em;
        }

        .gua-grid-item .gua-header {
            font-size: 0.9em;
            margin-bottom: 5px;
        }

        .gua-grid-item .gua-name {
            font-size: 1em;
            font-weight: bold;
            color: #333;
        }

        .gua-grid-item .gua-label {
            font-size: 0.9em;
            color: #333;
        }

        .gua-grid-item .line {
            font-size: 0.9em;
            margin: 2px 0;
        }

        .gua-grid-item .shi-ying-mark {
            font-size: 0.4em;
            left: 85%;
        }

        .gua-grid-item .dizhi-mark-left {
            left: 25%;
            font-size: 0.4em;
        }

        .gua-grid-item .tiangan-mark-right {
            left: 45%;
            font-size: 0.4em;
        }

        .gua-grid-item .liuqin-mark-left {
            left: 15%;
            font-size: 0.4em;
        }

        /* 卦宫信息格式：卦名·五行·爻变类型 (例如：乾·金·五爻变) */
        /* 小屏幕适配 */
        @media (max-width: 1200px) {
            .gua-grid-item {
                font-size: 0.6em;
                padding: 10px;
            }
            .gua-grid-item .liuqin-mark-left {
                left: 10%;
            }
        }

        @media (max-width: 800px) {
            .gua-grid-item {
                font-size: 0.5em;
                padding: 8px;
            }
            .gua-grid-item .liuqin-mark-left {
                left: 8%;
            }
        }

        @media (max-width: 600px) {
            .gua-grid-item {
                font-size: 0.4em;
                padding: 5px;
            }
            .gua-grid-item .liuqin-mark-left {
                left: 5%;
            }
        }

        .search-container {
            position: relative;
            display: inline-block;
            margin: 10px 0;
        }

        .search-container {
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 20px auto;
            width: 100%;
            transform: scale(1.5);
        }

        .search-container::before {
            content: '';
            position: absolute;
            top: -0.1px;
            left: -0.1px;
            right: -0.1px;
            bottom: -0.1px;
            background: #000;
            border-radius: 0;
            z-index: 1;
        }

        /* 隐藏手动输入六爻部分的黑色边框 */
        #yaoQuery .search-container::before {
            display: none;
        }

        .search-container input {
            position: relative;
            z-index: 2;
            padding: 4px 52px 4px 21px;
            border: none;
            border-radius: 4px;
            font-size: 10px;
            width: 100%;
            height: 15px;
            outline: none;
            transition: all 0.3s ease;
            background: #f0f0f0;
            -webkit-autofill: none;
            -webkit-box-shadow: 0 0 0 1000px #f0f0f0 inset;
            box-shadow: 0 0 0 1000px #f0f0f0 inset;
        }

        .search-container input:focus {
            border-color: #333;
            background: #f5f5f5;
            box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);
        }

        .search-icon {
            position: absolute;
            right: 17px;
            top: 50%;
            transform: translateY(-50%) scale(2);
            cursor: pointer;
            color: #999;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 20px;
            height: 20px;
            z-index: 3;
        }

        .search-icon:hover {
            color: #667eea;
            transform: translateY(-50%) scale(2);
        }

        /* 六爻选择样式 - 来自六爻2.htm */
        .yao-label {
            font-size: 12px;
            display: inline-block;
            width: 35px;
            vertical-align: middle;
            margin-right: 12px;
            font-weight: 600;
            color: #333;
            white-space: nowrap;
        }

        #yaoInputs {
            white-space: nowrap;
            text-align: center;
            width: 100%;
        }
        
        .yao-row {
            white-space: nowrap;
            margin: 5px 0;
            text-align: center;
            width: 100%;
        }
        
        #yaoInputs select {
            margin: 7px;
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            background: #f0f0f0;
            border: 2px solid #666;
            padding: 11px 27px 11px 15px;
            border-radius: 8px;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3e%3cpolygon points='6,9 18,9 12,15' fill='%23666'%3e%3c/polygon%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 12px center;
            background-size: 13px;
            font-weight: bold;
            font-size: 12px;
            width: 60%;
            transition: all 0.3s ease;
            display: inline-block;
        }

        #yaoInputs select:focus {
            outline: none;
            border-color: #333;
            background: #f5f5f5;
            box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);
        }

        #yaoInputs button {
            display: block;
            margin: 20px auto;
            padding: 12px 40px;
            font-size: 13px;
            background: #333;
            color: white;
            border: none;
            border-radius: 15px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            min-width: 150px;
        }

        #yaoInputs button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }

        .advanced-search-btn {
            display: block;
            margin: 20px auto;
            padding: 12px 60px;
            font-size: 13px;
            background: #333;
            color: white;
            border: none;
            border-radius: 15px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            min-width: 225px;
        }

        #yaoQuery .search-container {
            background: transparent;
            padding: 0;
            width: auto;
        }

        .advanced-search-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.4);
        }

        .advanced-search-btn:active {
            transform: translateY(0);
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
        }


        /* 查询结果显示样式 - 来自六爻2.htm */
        .gua-container {
            display: flex;
            justify-content: center;
            margin-top: 40px;
            width: 100%;
            margin-left: 100px;
        }
        .gua-section {
            margin-right: 160px;
            min-width: 600px;
        }
        .gua-label {
            font-size: 12px;
            color: #999;
            text-align: center;
            display: inline;
            font-weight: normal;
            margin-bottom: 10px;
        }
        .gua-name {
            font-size: 16px;
            color: #333;
            font-weight: bold;
            display: inline;
        }
        .gua-header {
            margin-bottom: 40px;
            text-align: center;
        }
        .gua-palace {
            font-size: 1.5em;
            color: #333;
            text-align: center;
            margin-top: 10px;
            margin-bottom: 20px;
        }
        .line { 
            font-family: monospace; 
            font-size: 24px;
            margin: 2px 0;
            text-align: center;
            position: relative;
        }

        .yao-symbol {
            margin-left: 120px;
        }
        .shi-ying-mark {
            color: #e74c3c;
            font-size: 12px;
            position: absolute;
            left: 70%;
            top: 60%;
            transform: translateY(-50%);
            line-height: 1;
            vertical-align: middle;
            font-weight: bold;
        }
        
        .dizhi-mark {
            position: absolute;
            font-size: 12px;
            line-height: 1;
            vertical-align: middle;
            font-weight: bold;
        }
        
        .dizhi-mark-left {
            left: 35%;
            top: 60%;
            transform: translateY(-50%);
        }
        
        .dizhi-mark-right {
            left: 66%;
            top: 60%;
            transform: translateY(-50%);
        }
        
        .tiangan-mark {
            position: absolute;
            font-size: 12px;
            line-height: 1;
            vertical-align: middle;
            color: #666;
            font-weight: bold;
        }
        
        .tiangan-mark-left {
            left: 60%;
            top: 60%;
            transform: translateY(-50%);
        }
        
        .tiangan-mark-right {
            left: 45%;
            top: 60%;
            transform: translateY(-50%);
        }
        
        .liuqin-mark {
            position: absolute;
            font-size: 12px;
            line-height: 1;
            vertical-align: middle;
            color: #666;
            font-weight: bold;
        }
        
        .liuqin-mark-left {
            left: 25%;
            top: 60%;
            transform: translateY(-50%);
        }
        
        .liuqin-mark-right {
            left: 75%;
            top: 60%;
            transform: translateY(-50%);
        }
        
        /* 五行颜色 */
        .wx-jin { color: #DAA520; } /* 金 - 金黄色 */
        .wx-mu { color: #228B22; } /* 木 - 绿色 */
        .wx-shui { color: #4169E1; } /* 水 - 蓝色 */
        .wx-huo { color: #DC143C; } /* 火 - 红色 */
        .wx-tu { color: #8B4513; } /* 土 - 棕色 */




    </style>
</head>
<body>
    <div class="card">
        <div class="header">
            <h1>六十四卦查询</h1>
        </div>
        
        <div class="query-section">
            <div class="query-buttons">
                <button class="query-btn active" onclick="selectQueryMethod('name', this)">卦名查询</button>
                <button class="query-btn" onclick="selectQueryMethod('yao', this)">手动选择六爻</button>
                <button class="query-btn" onclick="selectQueryMethod('number', this)">序号查询</button>
            </div>
            
            <div class="query-row">
                <div id="nameQuery" class="query-input" style="display: flex;">
                    <div class="search-container">
                        <input type="text" id="guaName" placeholder="请输入卦名（如：乾为天、坤为地）" autocomplete="off">
                        <span class="search-icon" onclick="queryByName()">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <circle cx="11" cy="11" r="8" stroke="currentColor" stroke-width="2"/>
                                <path d="m21 21-4.35-4.35" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                            </svg>
                        </span>
                    </div>
                </div>

                <div id="numberQuery" class="query-input" style="display: none;">
                    <div class="search-container">
                        <input type="text" id="guaNumber" placeholder="请输入卦序号（1-64）" autocomplete="off" oninput="formatGuaNumber(this)" onfocus="clearInput(this)">
                        <span class="search-icon" onclick="queryByNumber()">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <circle cx="11" cy="11" r="8" stroke="currentColor" stroke-width="2"/>
                                <path d="m21 21-4.35-4.35" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                            </svg>
                        </span>
                    </div>
                </div>
            </div>
        </div>

        <div id="yaoQuery" class="query-section" style="display: none;">
            <div class="query-method-container">
                <div id="yaoInputs">
                    <span class="yao-label">上爻</span><select id="line6"></select><br>
                    <span class="yao-label">五爻</span><select id="line5"></select><br>
                    <span class="yao-label">四爻</span><select id="line4"></select><br>
                    <span class="yao-label">三爻</span><select id="line3"></select><br>
                    <span class="yao-label">二爻</span><select id="line2"></select><br>
                    <span class="yao-label">初爻</span><select id="line1"></select><br>
                </div>
                <div class="search-container">
                    <button class="advanced-search-btn" onclick="queryByYao()">
                        <span>查询</span>
                    </button>
                </div>
            </div>
        </div>
        
        <div id="result"></div>
    </div>



    <script>
        // 64卦数据
        const gua64 = {
            "111111": { name: "乾为天", palace: "乾宫", wuxing: "金", type: "八纯" },
            "000000": { name: "坤为地", palace: "坤宫", wuxing: "土", type: "八纯" },
            "010001": { name: "水雷屯", palace: "坎宫", wuxing: "水", type: "二爻变" },
            "100010": { name: "山水蒙", palace: "艮宫", wuxing: "土", type: "二爻变" },
            "010111": { name: "水天需", palace: "坎宫", wuxing: "水", type: "五爻变" },
            "111010": { name: "天水讼", palace: "乾宫", wuxing: "金", type: "五爻变" },
            "000010": { name: "地水师", palace: "坤宫", wuxing: "土", type: "游魂" },
            "010000": { name: "水地比", palace: "坎宫", wuxing: "水", type: "归魂" },
            "110111": { name: "风天小畜", palace: "巽宫", wuxing: "木", type: "五爻变" },
            "111011": { name: "天泽履", palace: "乾宫", wuxing: "金", type: "三爻变" },
            "000111": { name: "地天泰", palace: "坤宫", wuxing: "土", type: "三爻变" },
            "111000": { name: "天地否", palace: "乾宫", wuxing: "金", type: "三爻变" },
            "111101": { name: "天火同人", palace: "乾宫", wuxing: "金", type: "四爻变" },
            "101111": { name: "火天大有", palace: "离宫", wuxing: "火", type: "四爻变" },
            "000100": { name: "地山谦", palace: "坤宫", wuxing: "土", type: "四爻变" },
            "001000": { name: "雷地豫", palace: "震宫", wuxing: "木", type: "四爻变" },
            "011001": { name: "泽雷随", palace: "兑宫", wuxing: "金", type: "初爻变" },
            "100110": { name: "山风蛊", palace: "艮宫", wuxing: "土", type: "初爻变" },
            "000011": { name: "地泽临", palace: "坤宫", wuxing: "土", type: "二爻变" },
            "110000": { name: "风地观", palace: "巽宫", wuxing: "木", type: "二爻变" },
            "101001": { name: "火雷噬嗑", palace: "离宫", wuxing: "火", type: "初爻变" },
            "100101": { name: "山火贲", palace: "艮宫", wuxing: "土", type: "初爻变" },
            "100000": { name: "山地剥", palace: "艮宫", wuxing: "土", type: "五爻变" },
            "000001": { name: "地雷复", palace: "坤宫", wuxing: "土", type: "初爻变" },
            "111001": { name: "天雷无妄", palace: "乾宫", wuxing: "金", type: "初爻变" },
            "100111": { name: "山天大畜", palace: "艮宫", wuxing: "土", type: "三爻变" },
            "100001": { name: "山雷颐", palace: "艮宫", wuxing: "土", type: "初爻变" },
            "011110": { name: "泽风大过", palace: "兑宫", wuxing: "金", type: "初爻变" },
            "010010": { name: "坎为水", palace: "坎宫", wuxing: "水", type: "八纯" },
            "101101": { name: "离为火", palace: "离宫", wuxing: "火", type: "八纯" },
            "011100": { name: "泽山咸", palace: "兑宫", wuxing: "金", type: "三爻变" },
            "001110": { name: "雷风恒", palace: "震宫", wuxing: "木", type: "三爻变" },
            "111100": { name: "天山遯", palace: "乾宫", wuxing: "金", type: "四爻变" },
            "001111": { name: "雷天大壮", palace: "震宫", wuxing: "木", type: "四爻变" },
            "101000": { name: "火地晋", palace: "离宫", wuxing: "火", type: "游魂" },
            "000101": { name: "地火明夷", palace: "坤宫", wuxing: "土", type: "游魂" },
            "110101": { name: "风火家人", palace: "巽宫", wuxing: "木", type: "四爻变" },
            "101011": { name: "火泽睽", palace: "离宫", wuxing: "火", type: "四爻变" },
            "010100": { name: "水山蹇", palace: "坎宫", wuxing: "水", type: "四爻变" },
            "001010": { name: "雷水解", palace: "震宫", wuxing: "木", type: "四爻变" },
            "100011": { name: "山泽损", palace: "艮宫", wuxing: "土", type: "初爻变" },
            "110001": { name: "风雷益", palace: "巽宫", wuxing: "木", type: "初爻变" },
            "011111": { name: "泽天夬", palace: "兑宫", wuxing: "金", type: "五爻变" },
            "111110": { name: "天风姤", palace: "乾宫", wuxing: "金", type: "初爻变" },
            "011000": { name: "泽地萃", palace: "兑宫", wuxing: "金", type: "三爻变" },
            "000110": { name: "地风升", palace: "坤宫", wuxing: "土", type: "三爻变" },
            "011010": { name: "泽水困", palace: "兑宫", wuxing: "金", type: "四爻变" },
            "010110": { name: "水风井", palace: "坎宫", wuxing: "水", type: "四爻变" },
            "011101": { name: "泽火革", palace: "兑宫", wuxing: "金", type: "四爻变" },
            "101110": { name: "火风鼎", palace: "离宫", wuxing: "火", type: "四爻变" },
            "001001": { name: "震为雷", palace: "震宫", wuxing: "木", type: "八纯" },
            "100100": { name: "艮为山", palace: "艮宫", wuxing: "土", type: "八纯" },
            "110100": { name: "风山渐", palace: "巽宫", wuxing: "木", type: "四爻变" },
            "001011": { name: "雷泽归妹", palace: "震宫", wuxing: "木", type: "四爻变" },
            "001101": { name: "雷火丰", palace: "震宫", wuxing: "木", type: "四爻变" },
            "101100": { name: "火山旅", palace: "离宫", wuxing: "火", type: "四爻变" },
            "110110": { name: "巽为风", palace: "巽宫", wuxing: "木", type: "八纯" },
            "011011": { name: "兑为泽", palace: "兑宫", wuxing: "金", type: "八纯" },
            "110010": { name: "风水涣", palace: "巽宫", wuxing: "木", type: "四爻变" },
            "010011": { name: "水泽节", palace: "坎宫", wuxing: "水", type: "四爻变" },
            "110011": { name: "风泽中孚", palace: "巽宫", wuxing: "木", type: "初爻变" },
            "001100": { name: "雷山小过", palace: "震宫", wuxing: "木", type: "四爻变" },
            "010101": { name: "水火既济", palace: "坎宫", wuxing: "水", type: "四爻变" },
            "101010": { name: "火水未济", palace: "离宫", wuxing: "火", type: "四爻变" }
        };



        // 根据六爻查询
        function queryByYao() {
            let binary = "";
            for (let i = 6; i >= 1; i--) {
                const val = document.getElementById(`line${i}`).value;
                if (val === "") {
                    alert("请选择所有六爻");
                    return;
                }
                binary += val;
            }
            
            const gua = gua64[binary];
            if (gua) {
                displayResult(binary, gua);
                // 查询成功后隐藏手动输入框
                document.getElementById('yaoQuery').style.display = 'none';
            } else {
                alert("未找到对应的卦象");
            }
        }

        // 清理输入框
        function clearInput(input) {
            // 防止自动填充或其他干扰
            if (input.value === '4' || input.value === 4) {
                input.value = '';
            }
        }

        // 格式化卦序号
        function formatGuaNumber(input) {
            let value = input.value.replace(/[^0-9]/g, ''); // 只保留数字
            input.value = value; // 只保留数字输入
        }

        // 转换为中文格式
        function convertToChinese(input) {
            const value = input.value;
            if (!value) return;
            
            const number = parseInt(value);
            if (number >= 1 && number <= 64) {
                // 转换为中文数字
                const chineseNums = ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二', '十三', '十四', '十五', '十六', '十七', '十八', '十九', '二十', '二十一', '二十二', '二十三', '二十四', '二十五', '二十六', '二十七', '二十八', '二十九', '三十', '三十一', '三十二', '三十三', '三十四', '三十五', '三十六', '三十七', '三十八', '三十九', '四十', '四十一', '四十二', '四十三', '四十四', '四十五', '四十六', '四十七', '四十八', '四十九', '五十', '五十一', '五十二', '五十三', '五十四', '五十五', '五十六', '五十七', '五十八', '五十九', '六十', '六十一', '六十二', '六十三', '六十四'];
                const chineseNum = chineseNums[number - 1] || number;
                input.value = `第${chineseNum}卦`;
            }
        }

        // 根据序号查询
        function queryByNumber() {
            const input = document.getElementById('guaNumber');
            const value = input.value;
            
            // 从"第XX卦"格式中提取数字
            let number;
            if (value.includes('第') && value.includes('卦')) {
                const chineseNum = value.replace('第', '').replace('卦', '');
                const chineseNums = ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二', '十三', '十四', '十五', '十六', '十七', '十八', '十九', '二十', '二十一', '二十二', '二十三', '二十四', '二十五', '二十六', '二十七', '二十八', '二十九', '三十', '三十一', '三十二', '三十三', '三十四', '三十五', '三十六', '三十七', '三十八', '三十九', '四十', '四十一', '四十二', '四十三', '四十四', '四十五', '四十六', '四十七', '四十八', '四十九', '五十', '五十一', '五十二', '五十三', '五十四', '五十五', '五十六', '五十七', '五十八', '五十九', '六十', '六十一', '六十二', '六十三', '六十四'];
                number = chineseNums.indexOf(chineseNum) + 1;
            } else {
                number = parseInt(value.replace(/[^0-9]/g, ''));
            }
            
            if (number < 1 || number > 64) {
                alert("请输入1-64之间的数字");
                return;
            }
            
            // 创建传统周易顺序的数组
            const traditionalOrder = [
                "111111", "000000", "010001", "100010", "010111", "111010", "000010", "010000",
                "110111", "111011", "000111", "111000", "111101", "101111", "000100", "001000",
                "011001", "100110", "000011", "110000", "101001", "100101", "100000", "000001",
                "111001", "100111", "100001", "011110", "010010", "101101", "011100", "001110",
                "111100", "001111", "101000", "000101", "110101", "101011", "010100", "001010",
                "100011", "110001", "011111", "111110", "011000", "000110", "011010", "010110",
                "011101", "101110", "001001", "100100", "110100", "001011", "001101", "101100",
                "110110", "011011", "110010", "010011", "110011", "001100", "010101", "101010"
            ];
            
            const binary = traditionalOrder[number - 1];
            const gua = gua64[binary];
            
            displayResult(binary, gua);
        }

        // 根据卦名查询
        function queryByName() {
            const name = document.getElementById('guaName').value.trim();
            if (!name) {
                alert("请输入卦名");
                return;
            }
            
            const guaKeys = Object.keys(gua64);
            for (let binary of guaKeys) {
                const gua = gua64[binary];
                if (gua.name.includes(name) || name.includes(gua.name)) {
                    displayResult(binary, gua);
                    return;
                }
            }
            
            alert("未找到对应的卦象");
        }

        // 显示结果
        function displayResult(binary, gua) {
            const resultDiv = document.getElementById('result');
            resultDiv.style.display = 'flex';
            
            // 创建传统周易顺序的数组
            const traditionalOrder = [
                "111111", "000000", "010001", "100010", "010111", "111010", "000010", "010000",
                "110111", "111011", "000111", "111000", "111101", "101111", "000100", "001000",
                "011001", "100110", "000011", "110000", "101001", "100101", "100000", "000001",
                "111001", "100111", "100001", "011110", "010010", "101101", "011100", "001110",
                "111100", "001111", "101000", "000101", "110101", "101011", "010100", "001010",
                "100011", "110001", "011111", "111110", "011000", "000110", "011010", "010110",
                "011101", "101110", "001001", "100100", "110100", "001011", "001101", "101100",
                "110110", "011011", "110010", "010011", "110011", "001100", "010101", "101010"
            ];
            
            // 获取卦的序号
            const guaIndex = traditionalOrder.indexOf(binary) + 1;
            
            // 转换为中文数字
            function toChineseNum(num) {
                const chineseNums = ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二', '十三', '十四', '十五', '十六', '十七', '十八', '十九', '二十', '二十一', '二十二', '二十三', '二十四', '二十五', '二十六', '二十七', '二十八', '二十九', '三十', '三十一', '三十二', '三十三', '三十四', '三十五', '三十六', '三十七', '三十八', '三十九', '四十', '四十一', '四十二', '四十三', '四十四', '四十五', '四十六', '四十七', '四十八', '四十九', '五十', '五十一', '五十二', '五十三', '五十四', '五十五', '五十六', '五十七', '五十八', '五十九', '六十', '六十一', '六十二', '六十三', '六十四'];
                return chineseNums[num - 1] || num;
            }
            
            // 判断卦的宫位和类型
            function getGuaInfo(binary) {
                // 乾宫八卦
                if (['111111', '111110', '111100', '111000', '110000', '100000', '101000', '101111'].includes(binary)) {
                    if (binary === '111111') return '<span class="wx-jin">乾-金-八纯</span>';
                    if (binary === '111110') return '<span class="wx-jin">乾-金-初爻变</span>';
                    if (binary === '111100') return '<span class="wx-jin">乾-金-二爻变</span>';
                    if (binary === '111000') return '<span class="wx-jin">乾-金-三爻变</span>';
                    if (binary === '110000') return '<span class="wx-jin">乾-金-四爻变</span>';
                    if (binary === '100000') return '<span class="wx-jin">乾-金-五爻变</span>';
                    if (binary === '101000') return '<span class="wx-jin">乾-金-游魂</span>';
                    if (binary === '101111') return '<span class="wx-jin">乾-金-归魂</span>';
                    return '<span class="wx-jin">乾-金</span>';
                }
                // 坤宫八卦
                if (['000000', '000001', '000011', '000111', '001111', '011111', '010111', '010000'].includes(binary)) {
                    if (binary === '000000') return '<span class="wx-tu">坤-土-八纯</span>';
                    if (binary === '000001') return '<span class="wx-tu">坤-土-初爻变</span>';
                    if (binary === '000011') return '<span class="wx-tu">坤-土-二爻变</span>';
                    if (binary === '000111') return '<span class="wx-tu">坤-土-三爻变</span>';
                    if (binary === '001111') return '<span class="wx-tu">坤-土-四爻变</span>';
                    if (binary === '011111') return '<span class="wx-tu">坤-土-五爻变</span>';
                    if (binary === '010111') return '<span class="wx-tu">坤-土-游魂</span>';
                    if (binary === '010000') return '<span class="wx-tu">坤-土-归魂</span>';
                    return '<span class="wx-tu">坤-土</span>';
                }
                // 坎宫八卦
                if (['010010', '010011', '010001', '010101', '011101', '001101', '000101', '000010'].includes(binary)) {
                    if (binary === '010010') return '<span class="wx-shui">坎-水-八纯</span>';
                    if (binary === '010011') return '<span class="wx-shui">坎-水-初爻变</span>';
                    if (binary === '010001') return '<span class="wx-shui">坎-水-二爻变</span>';
                    if (binary === '010101') return '<span class="wx-shui">坎-水-三爻变</span>';
                    if (binary === '011101') return '<span class="wx-shui">坎-水-四爻变</span>';
                    if (binary === '001101') return '<span class="wx-shui">坎-水-五爻变</span>';
                    if (binary === '000101') return '<span class="wx-shui">坎-水-游魂</span>';
                    if (binary === '000010') return '<span class="wx-shui">坎-水-归魂</span>';
                    return '<span class="wx-shui">坎-水</span>';
                }
                // 离宫八卦
                if (['101101', '101100', '101110', '101010', '100010', '110010', '111010', '111101'].includes(binary)) {
                    if (binary === '101101') return '<span class="wx-huo">离-火-八纯</span>';
                    if (binary === '101100') return '<span class="wx-huo">离-火-初爻变</span>';
                    if (binary === '101110') return '<span class="wx-huo">离-火-二爻变</span>';
                    if (binary === '101010') return '<span class="wx-huo">离-火-三爻变</span>';
                    if (binary === '100010') return '<span class="wx-huo">离-火-四爻变</span>';
                    if (binary === '110010') return '<span class="wx-huo">离-火-五爻变</span>';
                    if (binary === '111010') return '<span class="wx-huo">离-火-游魂</span>';
                    if (binary === '111101') return '<span class="wx-huo">离-火-归魂</span>';
                    return '<span class="wx-huo">离-火</span>';
                }
                // 震宫八卦
                if (['001001', '001000', '001010', '001110', '000110', '010110', '011110', '011001'].includes(binary)) {
                    if (binary === '001001') return '<span class="wx-mu">震-木-八纯</span>';
                    if (binary === '001000') return '<span class="wx-mu">震-木-初爻变</span>';
                    if (binary === '001010') return '<span class="wx-mu">震-木-二爻变</span>';
                    if (binary === '001110') return '<span class="wx-mu">震-木-三爻变</span>';
                    if (binary === '000110') return '<span class="wx-mu">震-木-四爻变</span>';
                    if (binary === '010110') return '<span class="wx-mu">震-木-五爻变</span>';
                    if (binary === '011110') return '<span class="wx-mu">震-木-游魂</span>';
                    if (binary === '011001') return '<span class="wx-mu">震-木-归魂</span>';
                    return '<span class="wx-mu">震-木</span>';
                }
                // 艮宫八卦
                if (['100100', '100101', '100111', '100011', '101011', '111011', '110011', '110100'].includes(binary)) {
                    if (binary === '100100') return '<span class="wx-tu">艮-土-八纯</span>';
                    if (binary === '100101') return '<span class="wx-tu">艮-土-初爻变</span>';
                    if (binary === '100111') return '<span class="wx-tu">艮-土-二爻变</span>';
                    if (binary === '100011') return '<span class="wx-tu">艮-土-三爻变</span>';
                    if (binary === '101011') return '<span class="wx-tu">艮-土-四爻变</span>';
                    if (binary === '111011') return '<span class="wx-tu">艮-土-五爻变</span>';
                    if (binary === '110011') return '<span class="wx-tu">艮-土-游魂</span>';
                    if (binary === '110100') return '<span class="wx-tu">艮-土-归魂</span>';
                    return '<span class="wx-tu">艮-土</span>';
                }
                // 巽宫八卦
                if (['110110', '110111', '110101', '110001', '111001', '101001', '100001', '100110'].includes(binary)) {
                    if (binary === '110110') return '<span class="wx-mu">巽-木-八纯</span>';
                    if (binary === '110111') return '<span class="wx-mu">巽-木-初爻变</span>';
                    if (binary === '110101') return '<span class="wx-mu">巽-木-二爻变</span>';
                    if (binary === '110001') return '<span class="wx-mu">巽-木-三爻变</span>';
                    if (binary === '111001') return '<span class="wx-mu">巽-木-四爻变</span>';
                    if (binary === '101001') return '<span class="wx-mu">巽-木-五爻变</span>';
                    if (binary === '100001') return '<span class="wx-mu">巽-木-游魂</span>';
                    if (binary === '100110') return '<span class="wx-mu">巽-木-归魂</span>';
                    return '<span class="wx-mu">巽-木</span>';
                }
                // 兑宫八卦
                if (['011011', '011010', '011000', '011100', '010100', '000100', '001100', '001011'].includes(binary)) {
                    if (binary === '011011') return '<span class="wx-jin">兑-金-八纯</span>';
                    if (binary === '011010') return '<span class="wx-jin">兑-金-初爻变</span>';
                    if (binary === '011000') return '<span class="wx-jin">兑-金-二爻变</span>';
                    if (binary === '011100') return '<span class="wx-jin">兑-金-三爻变</span>';
                    if (binary === '010100') return '<span class="wx-jin">兑-金-四爻变</span>';
                    if (binary === '000100') return '<span class="wx-jin">兑-金-五爻变</span>';
                    if (binary === '001100') return '<span class="wx-jin">兑-金-游魂</span>';
                    if (binary === '001011') return '<span class="wx-jin">兑-金-归魂</span>';
                    return '<span class="wx-jin">兑-金</span>';
                }
                return '';
            }
            
            // 获取世应位置
            function getShiYing(type) {
                if (type === '八纯' || type === '八纯卦') {
                    return { shi: 'shangyao', ying: 'sanyao' }; // 上爻为世，三爻为应
                } else if (type === '初爻变') {
                    return { shi: 'chuyao', ying: 'siyao' }; // 初爻为世，四爻为应
                } else if (type === '二爻变') {
                    return { shi: 'eryao', ying: 'wuyao' }; // 二爻为世，五爻为应
                } else if (type === '三爻变') {
                    return { shi: 'sanyao', ying: 'shangyao' }; // 三爻为世，上爻为应
                } else if (type === '四爻变') {
                    return { shi: 'siyao', ying: 'chuyao' }; // 四爻为世，初爻为应
                } else if (type === '五爻变') {
                    return { shi: 'wuyao', ying: 'eryao' }; // 五爻为世，二爻为应
                } else if (type === '游魂' || type === '游魂卦') {
                    return { shi: 'siyao', ying: 'chuyao' }; // 四爻为世，初爻为应
                } else if (type === '归魂' || type === '归魂卦') {
                    return { shi: 'sanyao', ying: 'shangyao' }; // 三爻为世，上爻为应
                }
                return { shi: '', ying: '' };
            }

            // 获取地支信息
            function getDizhi(binary) {
                const lower = binary.substring(3, 6); // 内卦（初爻二爻三爻）
                const upper = binary.substring(0, 3); // 外卦（四爻五爻上爻）
                
                const dizhiMap = {
                    '111': { lower: ['子水', '寅木', '辰土'], upper: ['午火', '申金', '戌土'] },
                    '110': { lower: ['丑土', '亥水', '酉金'], upper: ['未土', '巳火', '卯木'] },
                    '010': { lower: ['寅木', '辰土', '午火'], upper: ['申金', '戌土', '子水'] },
                    '101': { lower: ['卯木', '丑土', '亥水'], upper: ['酉金', '未土', '巳火'] },
                    '100': { lower: ['辰土', '午火', '申金'], upper: ['戌土', '子水', '寅木'] },
                    '011': { lower: ['巳火', '卯木', '丑土'], upper: ['亥水', '酉金', '未土'] },
                    '001': { lower: ['子水', '寅木', '辰土'], upper: ['午火', '申金', '戌土'] },
                    '000': { lower: ['未土', '巳火', '卯木'], upper: ['丑土', '亥水', '酉金'] }
                };
                
                const lowerDizhi = dizhiMap[lower] ? dizhiMap[lower].lower : [];
                const upperDizhi = dizhiMap[upper] ? dizhiMap[upper].upper : [];
                
                // 重新排列：从上爻到初爻的顺序
                // 数组索引：0=上爻, 1=五爻, 2=四爻, 3=三爻, 4=二爻, 5=初爻
                const result = [];
                result[0] = upperDizhi[2]; // 上爻
                result[1] = upperDizhi[1]; // 五爻
                result[2] = upperDizhi[0]; // 四爻
                result[3] = lowerDizhi[2]; // 三爻
                result[4] = lowerDizhi[1]; // 二爻
                result[5] = lowerDizhi[0]; // 初爻
                
                return result;
            }

            // 获取地支的五行颜色类
            function getDizhiColorClass(dizhi) {
                if (dizhi.includes('水')) return 'wx-shui';
                if (dizhi.includes('木')) return 'wx-mu';
                if (dizhi.includes('火')) return 'wx-huo';
                if (dizhi.includes('金')) return 'wx-jin';
                if (dizhi.includes('土')) return 'wx-tu';
                return '';
            }

            // 获取天干信息
            function getTiangan(binary) {
                const lower = binary.substring(3, 6); // 内卦（初爻二爻三爻）
                const upper = binary.substring(0, 3); // 外卦（四爻五爻上爻）
                
                const tianganMap = {
                    '111': { lower: '甲', upper: '壬' },
                    '110': { lower: '辛', upper: '辛' },
                    '010': { lower: '戊', upper: '戊' },
                    '101': { lower: '巳', upper: '巳' },
                    '100': { lower: '丙', upper: '丙' },
                    '011': { lower: '丁', upper: '丁' },
                    '001': { lower: '庚', upper: '庚' },
                    '000': { lower: '乙', upper: '癸' }
                };
                
                const lowerTiangan = tianganMap[lower] ? tianganMap[lower].lower : '';
                const upperTiangan = tianganMap[upper] ? tianganMap[upper].upper : '';
                
                // 返回从上爻到初爻的天干数组
                const result = [];
                result[0] = upperTiangan; // 上爻
                result[1] = upperTiangan; // 五爻
                result[2] = upperTiangan; // 四爻
                result[3] = lowerTiangan; // 三爻
                result[4] = lowerTiangan; // 二爻
                result[5] = lowerTiangan; // 初爻
                
                return result;
            }

            // 获取六亲信息
            function getLiuqin(binary, dizhi) {
                // 获取卦宫五行
                const guaInfo = getGuaInfo(binary);
                let guaWuxing = '';
                if (guaInfo.includes('乾-金') || guaInfo.includes('兑-金')) guaWuxing = '金';
                else if (guaInfo.includes('震-木') || guaInfo.includes('巽-木')) guaWuxing = '木';
                else if (guaInfo.includes('坎-水')) guaWuxing = '水';
                else if (guaInfo.includes('离-火')) guaWuxing = '火';
                else if (guaInfo.includes('坤-土') || guaInfo.includes('艮-土')) guaWuxing = '土';
                
                // 五行相生相克关系
                const wuxingRelations = {
                    '金': { ke: '木', sheng: '水', beike: '火', besheng: '土' },
                    '木': { ke: '土', sheng: '火', beike: '金', besheng: '水' },
                    '水': { ke: '火', sheng: '木', beike: '土', besheng: '金' },
                    '火': { ke: '金', sheng: '土', beike: '水', besheng: '木' },
                    '土': { ke: '水', sheng: '金', beike: '木', besheng: '火' }
                };
                
                const relations = wuxingRelations[guaWuxing];
                if (!relations) return [];
                
                // 根据地支五行确定六亲
                const liuqinMap = {
                    [guaWuxing]: '兄弟',      // A
                    [relations.ke]: '妻财',   // B (A克B)
                    [relations.sheng]: '子孙', // C (A生C)
                    [relations.beike]: '官鬼', // D (D克A)
                    [relations.besheng]: '父母' // E (E生A)
                };
                
                // 根据地支五行返回六亲
                const result = [];
                for (let i = 0; i < dizhi.length; i++) {
                    const dizhiWuxing = getDizhiWuxing(dizhi[i]);
                    result[i] = liuqinMap[dizhiWuxing] || '';
                }
                
                return result;
            }

            // 获取伏神信息
            function getFushen(binary, liuqin) {
                // 检查本卦六亲分布，找出缺失的六亲
                const allLiuqin = ['父母', '兄弟', '妻财', '官鬼', '子孙'];
                const presentLiuqin = new Set(liuqin.filter(lq => lq !== ''));
                const missingLiuqin = allLiuqin.filter(lq => !presentLiuqin.has(lq));
                
                if (missingLiuqin.length === 0) {
                    return null; // 没有缺失的六亲，不需要伏神
                }
                
                // 取第一个缺失的六亲作为伏神
                const fushenLiuqin = missingLiuqin[0];
                
                // 确定伏神落爻位置
                const fushenPosition = getFushenPosition(binary, fushenLiuqin);
                
                if (!fushenPosition) {
                    return null; // 无法确定伏神位置
                }
                
                return {
                    liuqin: fushenLiuqin,
                    position: fushenPosition,
                    dizhi: fushenPosition.dizhi
                };
            }

            // 确定伏神落爻位置
            function getFushenPosition(binary, fushenLiuqin) {
                // 获取本卦所属的八宫
                const guaInfo = getGuaInfo(binary);
                let palace = '';
                if (guaInfo.includes('乾-金')) palace = '乾';
                else if (guaInfo.includes('坤-土')) palace = '坤';
                else if (guaInfo.includes('坎-水')) palace = '坎';
                else if (guaInfo.includes('离-火')) palace = '离';
                else if (guaInfo.includes('震-木')) palace = '震';
                else if (guaInfo.includes('艮-土')) palace = '艮';
                else if (guaInfo.includes('巽-木')) palace = '巽';
                else if (guaInfo.includes('兑-金')) palace = '兑';
                
                // 八纯卦的二进制表示
                const pureGuaMap = {
                    '乾': '111111',
                    '坤': '000000',
                    '坎': '010010',
                    '离': '101101',
                    '震': '001001',
                    '艮': '100100',
                    '巽': '110110',
                    '兑': '011011'
                };
                
                const pureGuaBinary = pureGuaMap[palace];
                if (!pureGuaBinary) return null;
                
                // 获取八纯卦的地支信息
                const pureGuaDizhi = getDizhi(pureGuaBinary);
                const pureGuaLiuqin = getLiuqin(pureGuaBinary, pureGuaDizhi);
                
                // 在八纯卦中找到伏神六亲所在的爻位
                let fushenYaoIndex = -1;
                for (let i = 0; i < pureGuaLiuqin.length; i++) {
                    if (pureGuaLiuqin[i] === fushenLiuqin) {
                        fushenYaoIndex = i;
                        break;
                    }
                }
                
                if (fushenYaoIndex === -1) return null;
                
                return {
                    yaoIndex: fushenYaoIndex,
                    dizhi: pureGuaDizhi[fushenYaoIndex]
                };
            }

            // 获取地支的五行
            function getDizhiWuxing(dizhi) {
                if (dizhi.includes('水')) return '水';
                if (dizhi.includes('木')) return '木';
                if (dizhi.includes('火')) return '火';
                if (dizhi.includes('金')) return '金';
                if (dizhi.includes('土')) return '土';
                return '';
            }

            // 生成卦象符号
            function getYaoSymbol(binary, index) {
                const yao = binary[index];
                if (yao === '1') return '———';
                if (yao === '0') return '—   —';
                return '';
            }

            // 从卦宫信息中提取爻变类型
            const guaInfoText = getGuaInfo(binary);
            let yaoType = '';
            if (guaInfoText.includes('八纯')) {
                yaoType = '八纯';
            } else if (guaInfoText.includes('初爻变')) {
                yaoType = '初爻变';
            } else if (guaInfoText.includes('二爻变')) {
                yaoType = '二爻变';
            } else if (guaInfoText.includes('三爻变')) {
                yaoType = '三爻变';
            } else if (guaInfoText.includes('四爻变')) {
                yaoType = '四爻变';
            } else if (guaInfoText.includes('五爻变')) {
                yaoType = '五爻变';
            } else if (guaInfoText.includes('游魂')) {
                yaoType = '游魂';
            } else if (guaInfoText.includes('归魂')) {
                yaoType = '归魂';
            }
            
            const shiYing = getShiYing(yaoType);
            const dizhi = getDizhi(binary);
            const tiangan = getTiangan(binary);
            const liuqin = getLiuqin(binary, dizhi);
            
            // 获取伏神信息
            const fushen = getFushen(binary, liuqin);

            let html = "<div class='gua-container'>";
            html += "<div class='gua-section'>";
            html += "<div class='gua-header'><span class='gua-name'>" + gua.name + "第" + toChineseNum(guaIndex) + "</span></div>";
            html += "<div style='font-size: 24px; color: #666; text-align: center; margin-top: 10px; margin-bottom: 20px;'>" + getGuaInfo(binary) + "</div>";
            
            for(let i=0;i<=5;i++){
                const yaoSymbol = getYaoSymbol(binary, i);
                let shiYingMark = '';
                
                // 将数字索引转换为拼音
                let currentYao = '';
                if (i === 0) currentYao = 'shangyao';      // 上爻
                else if (i === 1) currentYao = 'wuyao';     // 五爻
                else if (i === 2) currentYao = 'siyao';     // 四爻
                else if (i === 3) currentYao = 'sanyao';    // 三爻
                else if (i === 4) currentYao = 'eryao';     // 二爻
                else if (i === 5) currentYao = 'chuyao';    // 初爻
                
                if (shiYing.shi === currentYao) {
                    shiYingMark = '<span class="shi-ying-mark">世</span>';
                } else if (shiYing.ying === currentYao) {
                    shiYingMark = '<span class="shi-ying-mark">应</span>';
                }
                
                // 添加六亲标记（最左侧）
                const liuqinText = liuqin[i];
                const liuqinMark = '<span class="liuqin-mark liuqin-mark-left">' + liuqinText + '</span>';
                
                // 添加地支标记（左侧）
                const dizhiText = dizhi[i];
                const dizhiColorClass = getDizhiColorClass(dizhiText);
                const dizhiMark = '<span class="dizhi-mark dizhi-mark-left ' + dizhiColorClass + '">' + dizhiText + '</span>';
                
                // 添加天干标记（本卦地支右侧，卦象左侧）
                const tianganText = tiangan[i];
                const tianganMark = '<span class="tiangan-mark tiangan-mark-right">' + tianganText + '</span>';
                
                // 添加伏神标注
                let fushenMark = '';
                if (fushen && fushen.position && fushen.position.yaoIndex === i) {
                    fushenMark = '<div style="color: red; font-size: 12px; text-align: center; margin-top: 2px;">伏神 ' + fushen.liuqin + ' ' + fushen.position.dizhi + '</div>';
                }
                
                html += "<div class='line'>" + liuqinMark + dizhiMark + tianganMark + "<span class='yao-symbol'>" + yaoSymbol + "</span>" + shiYingMark + "</div>";
                if (fushenMark) {
                    html += fushenMark;
                }
            }
            html += "</div>";
            html += "</div>";

            resultDiv.innerHTML = html;
        }



        // 选择查询方式
        function selectQueryMethod(method, clickedButton) {
            // 更新按钮状态
            const buttons = document.querySelectorAll('.query-btn');
            buttons.forEach(btn => btn.classList.remove('active'));
            
            // 如果有传入的按钮元素，使用它；否则根据method参数查找
            if (clickedButton) {
                clickedButton.classList.add('active');
            } else {
                const targetButton = document.querySelector(`button[onclick*="selectQueryMethod('${method}')"]`);
                if (targetButton) {
                    targetButton.classList.add('active');
                }
            }
            
            // 隐藏所有查询表单
            document.getElementById('nameQuery').style.display = 'none';
            document.getElementById('yaoQuery').style.display = 'none';
            document.getElementById('numberQuery').style.display = 'none';
            
            // 清除之前的查询结果
            document.getElementById('result').innerHTML = '';
            document.getElementById('result').style.display = 'none';
            
            // 显示选中的查询表单
            if (method === 'name') {
                document.getElementById('nameQuery').style.display = 'flex';
            } else if (method === 'yao') {
                document.getElementById('yaoQuery').style.display = 'block';
            } else if (method === 'number') {
                document.getElementById('numberQuery').style.display = 'flex';
            }
        }

        // 初始化六爻选择
        function initYaoSelects() {
            const options = [
                "阳爻———",
                "阴爻—   —"
            ];

            for (let i = 1; i <= 6; i++) {
                const select = document.getElementById("line" + i);
                if (select) {
                    select.innerHTML = '<option value="">请选择</option>';
                    options.forEach(opt => {
                        const el = document.createElement("option");
                        el.text = opt;
                        el.value = opt.includes("阳爻") ? "1" : "0";
                        select.add(el);
                    });
                }
            }
        }

        // 页面加载时初始化
        window.onload = function() {
            initYaoSelects();
            // 默认显示卦名查询
            selectQueryMethod('name', null);
            
            // 防止自动填充
            setTimeout(function() {
                document.getElementById('guaName').value = '';
                document.getElementById('guaNumber').value = '';
            }, 100);
        };
    </script>
</body>
</html>
