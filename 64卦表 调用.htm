<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>64卦表</title>
    <style>
        * {
            box-sizing: border-box;
        }
        
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #2c2c2c 0%, #1a1a1a 100%);
            min-height: 100vh;
        }
        
        .card {
            max-width: 1200px;
            margin: 0 auto;
            background: #f5f5f5;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-top: 20px;
            margin-bottom: 20px;
        }
        
        /* 重置所有按钮相关元素的默认样式 */
        .nav-button,
        .nav-button span,
        .nav-button div {
            margin: 0;
            padding: 0;
            border: none;
            outline: none;
            text-decoration: none;
            list-style: none;
        }
        
        .header-container {
            background: linear-gradient(135deg, #2c2c2c 0%, #1a1a1a 100%);
            padding: 45px 20px;
            text-align: center;
        }
        
        .header-title {
            color: #ffffff;
            font-size: 2.5em;
            font-weight: bold;
            margin: 0;
            margin-top: 15px;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
            letter-spacing: 2px;
        }
        
        .header-subtitle {
            color: rgba(255, 255, 255, 0.9);
            font-size: 1.2em;
            margin: 10px 0 0 0;
            font-weight: 300;
        }
        
        .button-container {
            display: flex !important;
            gap: 20px !important;
            background: #f5f5f5;
            padding: 30px 20px !important;
            justify-content: center !important;
            align-items: center !important;
            flex-wrap: nowrap !important;
            margin: 0;
            border-radius: 0;
            box-shadow: none;
            position: relative;
            top: 0;
        }
        
        .nav-button {
            background: white !important;
            color: #333 !important;
            border: 2px solid #333 !important;
            padding: 0 !important;
            font-size: 18px !important;
            font-weight: bold !important;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 220px !important;
            height: 60px !important;
            text-align: center;
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
            border-radius: 12px !important;
            box-sizing: border-box !important;
            position: relative;
            margin: 0 !important;
            vertical-align: top;
            font-family: Arial, sans-serif !important;
            line-height: 1 !important;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.2);
        }
        
        .nav-button:not(.active) {
            background: white !important;
            color: #333 !important;
            border: 2px solid #333 !important;
        }
        
        /* 确保所有按钮形状完全一致 */
        .nav-button,
        .nav-button * {
            font-family: Arial, sans-serif !important;
            font-size: 16px !important;
            font-weight: bold !important;
        }
        
        .nav-button.active {
            background: linear-gradient(135deg, #2c2c2c 0%, #1a1a1a 100%) !important;
            color: white !important;
            border-color: #333 !important;
        }
        
        .nav-button:hover:not(.active) {
            background: #f0f0f0 !important;
            border-color: #333 !important;
            color: #333 !important;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.3);
        }
        
        .nav-button-text {
            position: relative !important;
            z-index: 1;
            pointer-events: none;
            font-size: 16px !important;
            font-weight: bold !important;
            color: #333 !important;
            line-height: 1 !important;
            margin: 0 !important;
            padding: 0 !important;
            white-space: nowrap;
            text-align: center !important;
            font-family: Arial, sans-serif !important;
            display: block !important;
            width: 100% !important;
        }
        
        .nav-button.active .nav-button-text {
            color: white !important;
        }
        
        .dropdown-menu {
            position: fixed;
            background: #f5f5f5;
            border: 2px solid #666;
            border-radius: 6px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            width: 200px;
            left: 50%;
            transform: translateX(-50%);
        }
        
        .dropdown-item {
            padding: 12px 20px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            color: #333;
            border-bottom: 1px solid #666;
            transition: background-color 0.2s;
        }
        
        .dropdown-item:last-child {
            border-bottom: none;
        }
        
        .dropdown-item:hover {
            background-color: #f0f0f0;
        }
        
        .content-area {
            padding: 20px;
            background: #f5f5f5;
            margin: 0;
            border-radius: 0;
            box-shadow: none;
            min-height: 400px;
        }
        
        .content-section {
            display: none;
        }
        
        .content-section.show {
            display: block;
        }
        
        .gua-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 15px;
            margin-top: 20px;
        }
        
        .gua-grid-item {
            background-color: #f0f0f0;
            border-radius: 8px;
            padding: 15px;
            text-align: center;
            height: fit-content;
            font-size: 0.8em;
        }
        
        .gua-grid-item .gua-header {
            font-size: 0.9em;
            margin-bottom: 5px;
        }
        
        .gua-grid-item .gua-name {
            font-size: 1em;
            font-weight: bold;
            color: #333;
        }
        
        .gua-grid-item .gua-label {
            font-size: 0.9em;
            color: #333;
        }
        
        .gua-grid-item .line {
            font-size: 0.9em;
            margin: 2px 0;
            font-family: monospace;
            text-align: center;
            line-height: 1.2;
            position: relative;
        }

        .shi-ying-mark {
            position: absolute;
            left: 70%;
            top: 50%;
            transform: translateY(-50%);
            font-size: 10px;
            color: #e74c3c;
            font-weight: bold;
        }

        .dizhi-mark {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            font-size: 10px;
            font-weight: bold;
        }

        .dizhi-mark-left {
            left: 35%;
        }

        .tiangan-mark {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            font-size: 10px;
            font-weight: bold;
        }

        .tiangan-mark-right {
            left: 45%;
        }

        .liuqin-mark {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            font-size: 10px;
            font-weight: bold;
        }

        .liuqin-mark-left {
            left: 25%;
        }

        .yao-symbol {
            margin-left: 40px;
        }
        
        .palace-title {
            font-size: 1.3em;
            font-weight: bold;
            color: #333;
            text-align: center;
            margin: 30px 0 15px 0;
            padding: 12px;
            background-color: #e0e0e0;
            border-radius: 8px;
            border-left: 4px solid #333;
        }
        
        /* 五行颜色类 */
        .wx-jin { color: #DAA520; }
        .wx-mu { color: #228B22; }
        .wx-shui { color: #4169E1; }
        .wx-huo { color: #DC143C; }
        .wx-tu { color: #8B4513; }
        
        /* 响应式设计 */
        @media (max-width: 1200px) {
            .gua-grid-item {
                font-size: 0.8em;
                padding: 12px;
            }
            
            .gua-grid-item .line {
                font-size: 0.8em;
                margin: 1.5px 0;
            }
            
            .shi-ying-mark, .dizhi-mark, .tiangan-mark, .liuqin-mark {
                font-size: 8px;
            }
            
            .yao-symbol {
                font-size: 12px;
                margin-left: 32px;
            }
        }

        @media (max-width: 800px) {
            .gua-grid {
                grid-template-columns: repeat(3, 1fr);
                gap: 12px;
            }
            
            .gua-grid-item {
                font-size: 0.7em;
                padding: 10px;
            }
            
            .gua-grid-item .line {
                font-size: 0.7em;
                margin: 1px 0;
            }
            
            .shi-ying-mark, .dizhi-mark, .tiangan-mark, .liuqin-mark {
                font-size: 7px;
            }
            
            .yao-symbol {
                font-size: 10px;
                margin-left: 28px;
            }
        }

        @media (max-width: 600px) {
            .gua-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 10px;
            }
            
            .gua-grid-item {
                font-size: 0.6em;
                padding: 8px;
            }
            
            .gua-grid-item .line {
                font-size: 0.6em;
                margin: 1px 0;
            }
            
            .shi-ying-mark, .dizhi-mark, .tiangan-mark, .liuqin-mark {
                font-size: 6px;
            }
            
            .yao-symbol {
                font-size: 9px;
                margin-left: 24px;
            }
        }

        /* 特别针对9:16屏幕比例 */
        @media (max-width: 480px) and (orientation: portrait) {
            .gua-grid {
                grid-template-columns: repeat(4, 1fr);
                gap: 6px;
            }
            
            .gua-grid-item {
                font-size: 0.45em;
                padding: 4px;
            }
            
            .gua-grid-item .line {
                font-size: 0.45em;
                margin: 0.5px 0;
            }
            
            .shi-ying-mark, .dizhi-mark, .tiangan-mark, .liuqin-mark {
                font-size: 4px;
            }
            
            .yao-symbol {
                font-size: 7px;
                margin-left: 16px;
            }
        }

        /* 更小的屏幕才用2列 */
        @media (max-width: 360px) and (orientation: portrait) {
            .gua-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 8px;
            }
            
            .gua-grid-item {
                font-size: 0.5em;
                padding: 6px;
            }
            
            .gua-grid-item .line {
                font-size: 0.5em;
                margin: 0.5px 0;
            }
            
            .shi-ying-mark, .dizhi-mark, .tiangan-mark, .liuqin-mark {
                font-size: 5px;
            }
            
            .yao-symbol {
                font-size: 8px;
                margin-left: 20px;
            }
        }
        
        /* 手机版响应式 - 只调整布局，不改变按钮样式 */
        @media (max-width: 768px) {
            .card {
                margin: 10px;
                border-radius: 15px;
            }
            
            .header-container {
                padding: 30px 15px;
            }
            
            .header-title {
                font-size: 2em;
                margin-top: 15px;
            }
            
            .header-subtitle {
                font-size: 1em;
            }
            
            .button-container {
                flex-direction: row !important;
                gap: 15px !important;
                padding: 20px 15px !important;
                margin: 0;
            }
            
            .nav-button {
                width: calc(50% - 7.5px) !important;
                height: 55px !important;
                font-size: 16px !important;
            }
            
            .content-area {
                padding: 15px;
                margin: 0;
            }
        }
        
        @media (max-width: 480px) {
            .card {
                margin: 5px;
                border-radius: 10px;
            }
            
            .header-container {
                padding: 22px 10px;
            }
            
            .header-title {
                font-size: 1.8em;
                letter-spacing: 1px;
                margin-top: 15px;
            }
            
            .header-subtitle {
                font-size: 0.9em;
            }
            
            .button-container {
                flex-direction: row !important;
                gap: 10px !important;
                padding: 15px 10px !important;
                margin: 0;
                flex-wrap: wrap !important;
            }
            
            .nav-button {
                width: calc(50% - 5px) !important;
                height: 50px !important;
                font-size: 14px !important;
            }
            
            .content-area {
                padding: 10px;
                margin: 0;
            }
        }
        
        @media (max-width: 360px) {
            .button-container {
                flex-direction: row !important;
                gap: 5px !important;
                padding: 8px !important;
            }
            
            .nav-button {
                width: calc(50% - 3px) !important;
                height: 40px !important;
                font-size: 12px !important;
            }
        }
        
        /* 专门针对9:16竖屏比例 */
        @media (max-width: 480px) and (orientation: portrait) {
            .button-container {
                flex-direction: row !important;
                gap: 6px !important;
                padding: 8px !important;
                justify-content: space-between !important;
            }
            
            .nav-button {
                width: calc(50% - 3px) !important;
                height: 42px !important;
                font-size: 13px !important;
                min-width: 0 !important;
            }
        }
    </style>
</head>
<body>
    <div class="card">
        <div class="header-container">
            <h1 class="header-title">六十四卦表</h1>
        </div>
        
        <div class="button-container">
            <div class="nav-button" id="orderButton" onclick="showOrderContent()">
                <span class="nav-button-text">64卦表(顺序版)</span>
            </div>
            
            <div class="nav-button" id="palaceButton" onclick="showPalaceOptions()">
                <span class="nav-button-text">64卦表(八宫版)</span>
            </div>
        </div>
        
        <!-- 宫位选项下拉菜单 -->
        <div id="palaceDropdown" class="dropdown-menu" style="display: none;">
            <div class="dropdown-item" onclick="selectPalace('乾宫')">乾宫·金</div>
            <div class="dropdown-item" onclick="selectPalace('坤宫')">坤宫·土</div>
            <div class="dropdown-item" onclick="selectPalace('坎宫')">坎宫·水</div>
            <div class="dropdown-item" onclick="selectPalace('离宫')">离宫·火</div>
            <div class="dropdown-item" onclick="selectPalace('震宫')">震宫·木</div>
            <div class="dropdown-item" onclick="selectPalace('艮宫')">艮宫·土</div>
            <div class="dropdown-item" onclick="selectPalace('巽宫')">巽宫·木</div>
            <div class="dropdown-item" onclick="selectPalace('兑宫')">兑宫·金</div>
            <div class="dropdown-item" onclick="selectPalace('all')">完整显示</div>
        </div>
        
        <div class="content-area">
        <!-- 顺序版内容区域 -->
        <div id="order-content" class="content-section show">
            <div id="traditionalOrderContainer"></div>
        </div>

            <!-- 八宫版内容区域 -->
            <div id="palace-content" class="content-section" style="display: none;">
                <div id="eightPalaceContainer"></div>
            </div>
        </div>
    </div>

    <script>
        // 64卦数据 - 按传统顺序排列
        const traditionalOrderData = [
            { binary: '111111', name: '乾为天', palace: '乾', wuxing: '金', type: '八纯卦' },
            { binary: '000000', name: '坤为地', palace: '坤', wuxing: '土', type: '八纯卦' },
            { binary: '010001', name: '水雷屯', palace: '坎', wuxing: '水', type: '二爻变' },
            { binary: '100010', name: '山水蒙', palace: '艮', wuxing: '土', type: '四爻变' },
            { binary: '010111', name: '水天需', palace: '坤', wuxing: '土', type: '游魂卦' },
            { binary: '111010', name: '天水讼', palace: '离', wuxing: '火', type: '游魂卦' },
            { binary: '000010', name: '地水师', palace: '坎', wuxing: '水', type: '归魂卦' },
            { binary: '010000', name: '水地比', palace: '坤', wuxing: '土', type: '归魂卦' },
            { binary: '110111', name: '风天小畜', palace: '巽', wuxing: '木', type: '初爻变' },
            { binary: '111011', name: '天泽履', palace: '艮', wuxing: '土', type: '五爻变' },
            { binary: '000111', name: '地天泰', palace: '坤', wuxing: '土', type: '三爻变' },
            { binary: '111000', name: '天地否', palace: '乾', wuxing: '金', type: '三爻变' },
            { binary: '111101', name: '天火同人', palace: '离', wuxing: '火', type: '归魂卦' },
            { binary: '101111', name: '火天大有', palace: '乾', wuxing: '金', type: '归魂卦' },
            { binary: '000100', name: '地山谦', palace: '兑', wuxing: '金', type: '五爻变' },
            { binary: '001000', name: '雷地豫', palace: '震', wuxing: '木', type: '初爻变' },
            { binary: '011001', name: '泽雷随', palace: '震', wuxing: '木', type: '归魂卦' },
            { binary: '100110', name: '山风蛊', palace: '巽', wuxing: '木', type: '归魂卦' },
            { binary: '000011', name: '地泽临', palace: '坤', wuxing: '土', type: '二爻变' },
            { binary: '110000', name: '风地观', palace: '乾', wuxing: '金', type: '四爻变' },
            { binary: '101001', name: '火雷噬嗑', palace: '巽', wuxing: '木', type: '五爻变' },
            { binary: '100101', name: '山火贲', palace: '艮', wuxing: '土', type: '初爻变' },
            { binary: '100000', name: '山地剥', palace: '乾', wuxing: '金', type: '五爻变' },
            { binary: '000001', name: '地雷复', palace: '坤', wuxing: '土', type: '初爻变' },
            { binary: '111001', name: '天雷无妄', palace: '巽', wuxing: '木', type: '四爻变' },
            { binary: '100111', name: '山天大畜', palace: '艮', wuxing: '土', type: '二爻变' },
            { binary: '100001', name: '山雷颐', palace: '巽', wuxing: '木', type: '游魂卦' },
            { binary: '011110', name: '泽风大过', palace: '震', wuxing: '木', type: '游魂卦' },
            { binary: '010010', name: '坎为水', palace: '坎', wuxing: '水', type: '八纯卦' },
            { binary: '101101', name: '离为火', palace: '离', wuxing: '火', type: '八纯卦' },
            { binary: '011100', name: '泽山咸', palace: '兑', wuxing: '金', type: '三爻变' },
            { binary: '001110', name: '雷风恒', palace: '震', wuxing: '木', type: '三爻变' },
            { binary: '111100', name: '天山遯', palace: '乾', wuxing: '金', type: '初爻变' },
            { binary: '001111', name: '雷天大壮', palace: '坤', wuxing: '土', type: '四爻变' },
            { binary: '101000', name: '火地晋', palace: '乾', wuxing: '金', type: '游魂卦' },
            { binary: '000101', name: '地火明夷', palace: '坎', wuxing: '水', type: '游魂卦' },
            { binary: '110101', name: '风火家人', palace: '巽', wuxing: '木', type: '二爻变' },
            { binary: '101011', name: '火泽睽', palace: '艮', wuxing: '土', type: '四爻变' },
            { binary: '010100', name: '水山蹇', palace: '兑', wuxing: '金', type: '四爻变' },
            { binary: '001010', name: '雷水解', palace: '震', wuxing: '木', type: '二爻变' },
            { binary: '100011', name: '山泽损', palace: '艮', wuxing: '土', type: '三爻变' },
            { binary: '110001', name: '风雷益', palace: '巽', wuxing: '木', type: '三爻变' },
            { binary: '011111', name: '泽天夬', palace: '坤', wuxing: '土', type: '五爻变' },
            { binary: '111110', name: '天风姤', palace: '乾', wuxing: '金', type: '初爻变' },
            { binary: '011000', name: '泽地萃', palace: '兑', wuxing: '金', type: '二爻变' },
            { binary: '000110', name: '地风升', palace: '震', wuxing: '木', type: '四爻变' },
            { binary: '011010', name: '泽水困', palace: '兑', wuxing: '金', type: '初爻变' },
            { binary: '010110', name: '水风井', palace: '震', wuxing: '木', type: '五爻变' },
            { binary: '011101', name: '泽火革', palace: '坎', wuxing: '水', type: '四爻变' },
            { binary: '101110', name: '火风鼎', palace: '离', wuxing: '火', type: '二爻变' },
            { binary: '001001', name: '震为雷', palace: '震', wuxing: '木', type: '八纯卦' },
            { binary: '100100', name: '艮为山', palace: '艮', wuxing: '土', type: '八纯卦' },
            { binary: '110100', name: '风山渐', palace: '艮', wuxing: '土', type: '归魂卦' },
            { binary: '001011', name: '雷泽归妹', palace: '兑', wuxing: '金', type: '归魂卦' },
            { binary: '001101', name: '雷火丰', palace: '坎', wuxing: '水', type: '五爻变' },
            { binary: '101100', name: '火山旅', palace: '离', wuxing: '火', type: '初爻变' },
            { binary: '110110', name: '巽为风', palace: '巽', wuxing: '木', type: '八纯卦' },
            { binary: '011011', name: '兑为泽', palace: '兑', wuxing: '金', type: '八纯卦' },
            { binary: '110010', name: '风水涣', palace: '离', wuxing: '火', type: '五爻变' },
            { binary: '010011', name: '水泽节', palace: '坎', wuxing: '水', type: '初爻变' },
            { binary: '110011', name: '风泽中孚', palace: '艮', wuxing: '土', type: '游魂卦' },
            { binary: '001100', name: '雷山小过', palace: '兑', wuxing: '金', type: '游魂卦' },
            { binary: '010101', name: '水火既济', palace: '坎', wuxing: '水', type: '三爻变' },
            { binary: '101010', name: '火水未济', palace: '离', wuxing: '火', type: '三爻变' }
        ];

        // 创建gua64对象用于查询
        const gua64 = {};
        traditionalOrderData.forEach(gua => {
            gua64[gua.binary] = gua;
        });

        // 复原所有按钮文字到初始状态
        function resetAllButtonTexts() {
            const palaceButtonText = document.querySelector('#palaceButton .nav-button-text');
            
            palaceButtonText.textContent = '64卦表(八宫版)';
            
            // 隐藏所有下拉菜单
            document.getElementById('palaceDropdown').style.display = 'none';
        }

        // 显示顺序版内容
        function showOrderContent() {
            console.log('showOrderContent 被调用');
            
            // 复原其他按钮文字
            resetAllButtonTexts();
            
            // 更新按钮激活状态
            document.querySelectorAll('.nav-button').forEach(btn => btn.classList.remove('active'));
            document.getElementById('orderButton').classList.add('active');
            
            // 隐藏所有内容区域
            document.querySelectorAll('.content-section').forEach(section => {
                section.style.display = 'none';
                section.classList.remove('show');
            });
            
            // 显示顺序版内容区域
            const orderContent = document.getElementById('order-content');
            if (orderContent) {
                orderContent.style.display = 'block';
                orderContent.classList.add('show');
                console.log('order-content 显示成功');
            } else {
                console.log('找不到 order-content 元素');
            }
            
            // 初始化顺序版内容
            initTraditionalOrderTable();
        }
        
        // 显示宫位选项下拉菜单
        function showPalaceOptions() {
            // 复原其他按钮文字
            resetAllButtonTexts();
            
            // 切换宫位下拉菜单
            const palaceDropdown = document.getElementById('palaceDropdown');
            const palaceButton = document.getElementById('palaceButton');
            
            if (palaceDropdown.style.display === 'none' || palaceDropdown.style.display === '') {
                // 获取按钮位置
                const rect = palaceButton.getBoundingClientRect();
                palaceDropdown.style.display = 'block';
                palaceDropdown.style.position = 'fixed';
                palaceDropdown.style.left = (rect.left + rect.width / 2) + 'px';
                palaceDropdown.style.top = (rect.bottom + 5) + 'px';
                palaceDropdown.style.transform = 'translateX(-50%)';
                palaceDropdown.style.zIndex = '1000';
            } else {
                palaceDropdown.style.display = 'none';
            }
            
            // 更新按钮激活状态
            document.querySelectorAll('.nav-button').forEach(btn => btn.classList.remove('active'));
            document.getElementById('palaceButton').classList.add('active');
        }
        
        // 选择宫位
        function selectPalace(selectedPalace) {
            // 更新按钮文字
            const buttonText = document.querySelector('#palaceButton .nav-button-text');
            if (selectedPalace === 'all') {
                buttonText.textContent = '完整显示';
            } else {
                buttonText.textContent = selectedPalace;
            }
            
            // 隐藏下拉菜单
            document.getElementById('palaceDropdown').style.display = 'none';
            
            // 更新按钮激活状态
            document.querySelectorAll('.nav-button').forEach(btn => btn.classList.remove('active'));
            document.getElementById('palaceButton').classList.add('active');
            
            // 如果选择的是默认选项（空值），不显示内容
            if (selectedPalace === '' || selectedPalace === 'hide') {
                // 隐藏所有内容区域
                document.querySelectorAll('.content-section').forEach(section => {
                    section.style.display = 'none';
                    section.classList.remove('show');
                });
                return;
            }
            
            // 隐藏所有内容区域
            document.querySelectorAll('.content-section').forEach(section => {
                section.style.display = 'none';
                section.classList.remove('show');
            });
            
            // 显示八宫版内容区域
            const palaceContent = document.getElementById('palace-content');
            palaceContent.style.display = 'block';
            palaceContent.classList.add('show');
            
            // 初始化八宫版内容
            initEightPalaceTable(selectedPalace);
        }

        // 生成卦象符号
        function getYaoSymbol(binary, index) {
            const yao = binary[index];
            if (yao === '1') return '———';
            if (yao === '0') return '—   —';
            return '';
        }

        // 获取世应位置
        function getShiYing(type) {
            if (type === '八纯卦') {
                return { shi: 0, ying: 3 }; // 上爻为世(0)，三爻为应(3)
            } else if (type === '初爻变') {
                return { shi: 5, ying: 2 }; // 初爻为世(5)，四爻为应(2)
            } else if (type === '二爻变') {
                return { shi: 4, ying: 1 }; // 二爻为世(4)，五爻为应(1)
            } else if (type === '三爻变') {
                return { shi: 3, ying: 0 }; // 三爻为世(3)，上爻为应(0)
            } else if (type === '四爻变') {
                return { shi: 2, ying: 5 }; // 四爻为世(2)，初爻为应(5)
            } else if (type === '五爻变') {
                return { shi: 1, ying: 4 }; // 五爻为世(1)，二爻为应(4)
            } else if (type === '游魂卦') {
                return { shi: 2, ying: 5 }; // 四爻为世(2)，初爻为应(5)
            } else if (type === '归魂卦') {
                return { shi: 3, ying: 0 }; // 三爻为世(3)，上爻为应(0)
            }
            return { shi: -1, ying: -1 };
        }

        // 获取地支信息
        function getDizhi(binary) {
            const lower = binary.substring(3, 6); // 内卦（初爻二爻三爻）
            const upper = binary.substring(0, 3); // 外卦（四爻五爻上爻）
            
            const dizhiMap = {
                '111': { lower: ['子水', '寅木', '辰土'], upper: ['午火', '申金', '戌土'] },
                '110': { lower: ['丑土', '亥水', '酉金'], upper: ['未土', '巳火', '卯木'] },
                '010': { lower: ['寅木', '辰土', '午火'], upper: ['申金', '戌土', '子水'] },
                '101': { lower: ['卯木', '丑土', '亥水'], upper: ['酉金', '未土', '巳火'] },
                '100': { lower: ['辰土', '午火', '申金'], upper: ['戌土', '子水', '寅木'] },
                '011': { lower: ['巳火', '卯木', '丑土'], upper: ['亥水', '酉金', '未土'] },
                '001': { lower: ['子水', '寅木', '辰土'], upper: ['午火', '申金', '戌土'] },
                '000': { lower: ['未土', '巳火', '卯木'], upper: ['丑土', '亥水', '酉金'] }
            };
            
            const lowerDizhi = dizhiMap[lower] ? dizhiMap[lower].lower : [];
            const upperDizhi = dizhiMap[upper] ? dizhiMap[upper].upper : [];
            
            // 重新排列：从上爻到初爻的顺序
            const result = [];
            result[0] = upperDizhi[2]; // 上爻
            result[1] = upperDizhi[1]; // 五爻
            result[2] = upperDizhi[0]; // 四爻
            result[3] = lowerDizhi[2]; // 三爻
            result[4] = lowerDizhi[1]; // 二爻
            result[5] = lowerDizhi[0]; // 初爻
            
            return result;
        }

        // 获取地支的五行颜色类
        function getDizhiColorClass(dizhi) {
            if (dizhi.includes('水')) return 'wx-shui';
            if (dizhi.includes('木')) return 'wx-mu';
            if (dizhi.includes('火')) return 'wx-huo';
            if (dizhi.includes('金')) return 'wx-jin';
            if (dizhi.includes('土')) return 'wx-tu';
            return '';
        }

        // 获取天干信息
        function getTiangan(binary) {
            const lower = binary.substring(3, 6); // 内卦（初爻二爻三爻）
            const upper = binary.substring(0, 3); // 外卦（四爻五爻上爻）
            
            const tianganMap = {
                '111': { lower: '甲', upper: '壬' },
                '110': { lower: '辛', upper: '辛' },
                '010': { lower: '戊', upper: '戊' },
                '101': { lower: '巳', upper: '巳' },
                '100': { lower: '丙', upper: '丙' },
                '011': { lower: '丁', upper: '丁' },
                '001': { lower: '庚', upper: '庚' },
                '000': { lower: '乙', upper: '癸' }
            };
            
            const lowerTiangan = tianganMap[lower] ? tianganMap[lower].lower : '';
            const upperTiangan = tianganMap[upper] ? tianganMap[upper].upper : '';
            
            // 返回从上爻到初爻的天干数组
            const result = [];
            result[0] = upperTiangan; // 上爻
            result[1] = upperTiangan; // 五爻
            result[2] = upperTiangan; // 四爻
            result[3] = lowerTiangan; // 三爻
            result[4] = lowerTiangan; // 二爻
            result[5] = lowerTiangan; // 初爻
            
            return result;
        }

        // 获取六亲信息
        function getLiuqin(binary, dizhi, wuxing) {
            // 五行相生相克关系
            const wuxingRelations = {
                '金': { ke: '木', sheng: '水', beike: '火', besheng: '土' },
                '木': { ke: '土', sheng: '火', beike: '金', besheng: '水' },
                '水': { ke: '火', sheng: '木', beike: '土', besheng: '金' },
                '火': { ke: '金', sheng: '土', beike: '水', besheng: '木' },
                '土': { ke: '水', sheng: '金', beike: '木', besheng: '火' }
            };
            
            const relations = wuxingRelations[wuxing];
            const result = [];
            
            for (let i = 0; i < 6; i++) {
                const dizhiWuxing = getDizhiWuxing(dizhi[i]);
                let liuqin = '';
                
                if (dizhiWuxing === wuxing) {
                    liuqin = '兄弟';
                } else if (dizhiWuxing === relations.ke) {
                    liuqin = '妻财';
                } else if (dizhiWuxing === relations.sheng) {
                    liuqin = '子孙';
                } else if (dizhiWuxing === relations.beike) {
                    liuqin = '官鬼';
                } else if (dizhiWuxing === relations.besheng) {
                    liuqin = '父母';
                }
                
                result[i] = liuqin;
            }
            
            return result;
        }
        
        // 获取地支的五行属性
        function getDizhiWuxing(dizhi) {
            if (dizhi.includes('子') || dizhi.includes('亥')) return '水';
            if (dizhi.includes('寅') || dizhi.includes('卯')) return '木';
            if (dizhi.includes('巳') || dizhi.includes('午')) return '火';
            if (dizhi.includes('申') || dizhi.includes('酉')) return '金';
            if (dizhi.includes('丑') || dizhi.includes('辰') || dizhi.includes('未') || dizhi.includes('戌')) return '土';
            return '';
        }

        // 生成单个卦的HTML
        function generateGuaHTML(gua, index) {
            const shiYing = getShiYing(gua.type);
            const dizhi = getDizhi(gua.binary);
            const tiangan = getTiangan(gua.binary);
            const liuqin = getLiuqin(gua.binary, dizhi, gua.wuxing);
            const wuxingColorClass = getWuxingColorClass(gua.wuxing);
            const palaceInfo = `${gua.palace}·<span class="${wuxingColorClass}">${gua.wuxing}</span>·${gua.type}`;
            
            // 获取传统周易顺序号
            const traditionalIndex = traditionalOrderData.findIndex(item => item.binary === gua.binary) + 1;
            
            let html = `<div class='gua-grid-item'><div class='gua-header'><span class='gua-name'>${gua.name}</span><span class='gua-label'>第${traditionalIndex}</span></div>`;
            html += `<div class='gua-palace'>${palaceInfo}</div>`;
            
            for(let i = 0; i <= 5; i++){
                const yaoSymbol = getYaoSymbol(gua.binary, i);
                let shiYingMark = '';
                if (shiYing.shi === i) {
                    shiYingMark = '<span class="shi-ying-mark">世</span>';
                } else if (shiYing.ying === i) {
                    shiYingMark = '<span class="shi-ying-mark">应</span>';
                }
                
                // 添加六亲标记（最左侧）
                const liuqinText = liuqin[i];
                const liuqinMark = '<span class="liuqin-mark liuqin-mark-left">' + liuqinText + '</span>';
                
                // 添加地支标记（左侧）
                const dizhiText = dizhi[i];
                const dizhiColorClass = getDizhiColorClass(dizhiText);
                const dizhiMark = '<span class="dizhi-mark dizhi-mark-left ' + dizhiColorClass + '">' + dizhiText + '</span>';
                
                // 添加天干标记（本卦地支右侧，卦象左侧）
                const tianganText = tiangan[i];
                const tianganMark = '<span class="tiangan-mark tiangan-mark-right">' + tianganText + '</span>';
                
                html += "<div class='line'>" + liuqinMark + dizhiMark + tianganMark + "<span class='yao-symbol'>" + yaoSymbol + "</span>" + shiYingMark + "</div>";
            }
            html += "</div>";
            
            return html;
        }

        // 获取五行的颜色类
        function getWuxingColorClass(wuxing) {
            const wuxingMap = {
                '金': 'wx-jin',
                '木': 'wx-mu',
                '水': 'wx-shui',
                '火': 'wx-huo',
                '土': 'wx-tu'
            };
            return wuxingMap[wuxing] || '';
        }

        // 初始化传统顺序表格
        function initTraditionalOrderTable() {
            console.log('initTraditionalOrderTable 被调用');
            const container = document.getElementById('traditionalOrderContainer');
            if (!container) {
                console.log('找不到 traditionalOrderContainer 元素');
                return;
            }
            console.log('找到 traditionalOrderContainer 元素');
            let html = '<div class="gua-grid">';
            
            // 按照传统顺序遍历64卦
            traditionalOrderData.forEach((gua, index) => {
                html += generateGuaHTML(gua, index);
            });
            
            html += '</div>';
            container.innerHTML = html;
            console.log('传统顺序表格初始化完成，HTML长度:', html.length);
        }

        // 初始化八宫版表格
        function initEightPalaceTable(selectedPalace) {
            const container = document.getElementById('eightPalaceContainer');
            let html = '';
            
            // 八宫数据
            const eightPalaceData = {
                '乾宫': ['111111', '111110', '111100', '111000', '110000', '100000', '101000', '101111'],
                '坤宫': ['000000', '000001', '000011', '000111', '001111', '011111', '010111', '010000'],
                '坎宫': ['010010', '010011', '010001', '010101', '011101', '001101', '000101', '000010'],
                '离宫': ['101101', '101100', '101110', '101010', '100010', '110010', '111010', '111101'],
                '震宫': ['001001', '001000', '001010', '001110', '000110', '010110', '011110', '011001'],
                '艮宫': ['100100', '100101', '100111', '100011', '101011', '111011', '110011', '110100'],
                '巽宫': ['110110', '110111', '110101', '110001', '111001', '101001', '100001', '100110'],
                '兑宫': ['011011', '011010', '011000', '011100', '010100', '000100', '001100', '001011']
            };
            
            // 遍历每个宫
            for (const [palaceName, binaryList] of Object.entries(eightPalaceData)) {
                if (selectedPalace === '' || selectedPalace === 'hide') {
                    continue;
                } else if (selectedPalace !== 'all' && selectedPalace !== palaceName) {
                    continue;
                }
                
                // 获取该宫的第一个卦的五行属性
                const firstGua = gua64[binaryList[0]];
                const wuxingColorClass = `wx-${firstGua.wuxing === '金' ? 'jin' : firstGua.wuxing === '木' ? 'mu' : firstGua.wuxing === '水' ? 'shui' : firstGua.wuxing === '火' ? 'huo' : 'tu'}`;
                const palaceTitle = `${palaceName}·<span class="${wuxingColorClass}">${firstGua.wuxing}</span>`;
                
                html += `<div class="palace-section">`;
                html += `<div class="palace-title">${palaceTitle}</div>`;
                html += '<div class="gua-grid">';
                
                // 遍历该宫的8个卦
                binaryList.forEach((binary, index) => {
                    const gua = gua64[binary];
                    if (gua) {
                        html += generateGuaHTML(gua, index);
                    }
                });
                
                html += '</div>';
                html += '</div>';
            }
            
            container.innerHTML = html;
        }

        // 点击外部关闭下拉菜单
        document.addEventListener('click', function(event) {
            const palaceDropdown = document.getElementById('palaceDropdown');
            const palaceButton = document.getElementById('palaceButton');
            
            if (!palaceButton.contains(event.target) && !palaceDropdown.contains(event.target)) {
                palaceDropdown.style.display = 'none';
            }
        });

        window.onload = function() {
            // 默认激活第一个按钮
            document.getElementById('orderButton').classList.add('active');
            // 默认显示顺序版内容
            document.getElementById('order-content').classList.add('show');
            // 初始化顺序版内容
            initTraditionalOrderTable();
        };
    </script>
</body>
</html>
